FORMAT: 1A
HOST: https://we-connect-demo.herokuapp.com/

# WeConnect

WeConnect is a demo that provides a platform that brings businesses and individuals together. This platform creates awareness for businesses and gives the users the ability to write reviews about the businesses they have interacted with.

# WeConnect API Root [/]

This resource does not have any attributes. Instead it offers the initial API affordances in the form of the links in the JSON body.

## Group User

Resource related to user in the API.

## User Collection [/api/v1/users]

### List All Users [GET]

+ Response 200 (application/json)

    + Body
            {
                "Users": [
                    {
                      "id": 1,
                      "title": "mr",
                      "firstname": "Somto",
                      "lastname": "Ikwuoma",
                      "username": "sommyjezzy",
                      "password": "12345",
                      "email": "sommy@gmail.com",
                      "gender": "male",
                      "street": "ljan terrasse 346",
                      "city": "ikotun",
                      "state": "lagos",
                      "dob": "2015-11-04",
                      "registered": "2015-11-04T22:09:36Z",
                      "phone": "66976498",
                      "userImage": "",
                    },{
                      "id": 2,
                      "title": "mr",
                      "firstname": "justin",
                      "lastname": "sommy",
                      "username": "sommyj",
                      "password": "1234",
                      "email": "justin@gmail.com",
                      "gender": "male",
                      "street": "ljan terrasse 346",
                      "city": "ikotun",
                      "state": "lagos",
                      "dob": "2015-11-04",
                      "registered": "2015-11-04T22:09:36Z",
                      "phone": "66976498",
                      "userImage": "",
                    },{
                      "id": 3,
                      "title": "mr",
                      "firstname": "dumebi",
                      "lastname": "sonna",
                      "username": "duboy",
                      "password": "123",
                      "email": "boss@gmail.com",
                      "gender": "male",
                      "street": "",
                      "city": "",
                      "state": "",
                      "dob": "2015-11-04",
                      "registered": "2015-11-04T22:09:36Z",
                      "phone": "66976498",
                      "userImage": "",
                    }
                ],
                "message": "Success",
                "error": false
            }

## Signup [/auth/v1/signup]

### Create a New User [POST]

You may create your own user account using this action. It takes a JSON object
containing user details.

+ title (string) - The title
+ firstname (string) - The firstname
+ lastname (string) - The lastname
+ username (string) - The username
+ password (string) - The password
+ email (string) - The email address
+ gender (string) - The gender
+ street (string) - The street location
+ city (string) - The city location
+ state (string) - The state location
+ dob (string) - The date of birth
+ registered (string) - The user regisration date
+ phone (string) - The phone number
+ userImage (file) - The user image url location

This action takes a multipart/form-data enctype of the request as follows:

+ Request (multipart/form-data)

                {
                  title: 'mr',
                  firstname: 'Somto',
                  lastname: 'Ikwuoma',
                  username: 'sommyjezzy',
                  password: '12345',
                  email: 'sommy@gmail.com',
                  gender: 'male',
                  street: 'ljan terrasse 346',
                  city: 'ikotun',
                  state: 'lagos',
                  dob: '2015-11-04',
                  registered: "2015-11-04T22:09:36Z",
                  phone: '66976498',
                  userImage: '',
                }

This example returns a 201 status code, along with HTTP headers and a body.

+ Response 201 (application/json)

    + Body

    {
        "Users": {
            "id": 4,
            "title": "mr",
            "firstname": "Somto",
            "lastname": "Ikwuoma",
            "username": "sommyjezzy",
            "password": "12345",
            "email": "sommy@gmail.com",
            "gender": "male",
            "street": "ljan terrasse 346",
            "city": "ikotun",
            "state": "lagos",
            "dob": "2015-11-04",
            "registered": "2015-11-04T22:09:36Z",
            "phone": "66976498",
            "userImage": "",
        },
        "message": "Success",
        "error": false
    }

## Login [/auth/v1/login]

### Login a User [POST]

    You may Login a user using this action. It takes a JSON object
    containing user details.

    + username (string) - The username
    + password (string) - The password

This action takes a x-www-form-urlencoded payload as part of the request as follows:

+ Request (application/x-www-form-urlencoded)

                {
                  "username": "duboy",
                  "password": "123",
                }

This example returns a 200 status code, along with HTTP headers and a body.

+ Response 200 (application/json)

    + Body

            {
                "Users": {
                  "id": 3,
                  "titlename": "mr",
                  "firstname": "dumebi",
                  "lastname": "sonna",
                  "username": "duboy",
                  "password": "123",
                  "email": "boss@gmail.com",
                  "gender": "male",
                  "street": "",
                  "city": "",
                  "state": "",
                  "dob": "2015-11-04",
                  "registered": "2015-11-04T22:09:36Z",
                  "phone": "66976498",
                  "userImage": ""
                },
                "message": "Success",
                "error": false
            }


## Group Business

Resource related to business in the API.

## Business Collection [/v1/businesses]

### List All Businesses [GET]

+ Response 200 (application/json)

  + Body
          {
            "Businesses": [
                  {
                    "businessId": "1",
                    "businessName": "Sommyj IceCream",
                    "userId": "2",
                    "description": "We sell happiness, do u want to be happy.",
                    "location": "lagos",
                    "category": "entertainment",
                    "companyImage": ""
                  },
                  {
                    "businessId": "2",
                    "businessName": "Sommyj Farms",
                    "userId": "3",
                    "description": "We feed the world and you know it,",
                    "location": "imo",
                    "category": "farming",
                    "companyImage": ""
                  },
                  {
                    "businessId": "3",
                    "businessName": "Sommyj Security",
                    "userId": "1",
                    "description": "We will protect you no matter what, trust us.",
                    "location": "abuja",
                    "category": "security",
                    "companyImage": ""
                  }
            ],
            "message": "Success",
            "error": false
        }

### Create a New Business [POST]

You may create your own Business using this action. It takes a multipart/form-data enctype object
containing Business details.

        + businessName (string) - The businessName
        + description (string) - The business description
        + location (string) - The business location
        + category (string) - The business category
        + companyImage (file) - The company image or logo

This action takes a multipart/form-data enctype of the request as follows:

+ Request (multipart/form-data)

            {
              businessName: 'Sommyj',
              userId: '22',
              description: 'We produce quality products',
              location: 'lagos',
              category: 'Production',
              companyImage: ''
            }

This example returns a 201 status code, along with HTTP headers and a body.

+ Response 201 (application/json)

    + Body

              {
                  "Businesses": {
                        "businessId": "4",
                        "businessName": "Sommyj",
                        "userId": "22",
                        "description": "We produce quality products",
                        "location": "lagos",
                        "category": "Production"
                        "companyImage": ""
                  },
                  "message": "Success",
                  "error": false
              }

## Business [/v1/businesses/{businessId}]

A Business object has the following attributes.

- reviews

+ Parameters
    + businessId: 4 (required, number) - ID of the Business in the form of an integer

This resource has an action to retrieve a business detail.

### View a Businesses Detail [GET]

+ Response 200 (application/json)

    + Body

              {
                  "Businesses": {
                        "businessId": "4",
                        "businessName": "Sommyj",
                        "userId": "22",
                        "description": "We produce quality products",
                        "location": "lagos",
                        "category": "Production"
                        "companyImage": ""
                  },
                  "message": "Success",
                  "error": false
              }

This resource has a update action to edit a business.

### Update a Business Detail [PUT]

This action takes a multipart/form-data enctype of the request as follows:

+ Request (multipart/form-data)

            {
              businessName: 'Sommyj',
              userId: '22',
              description: 'We produce quality products',
              location: 'lagos',
              category: 'Production',
              companyImage: ''
            }

+ Response 200 (application/json)

    + Body

              {
                  "Businesses": {
                        "businessId": "4",
                        "businessName": "Sommyj",
                        "userId": "22",
                        "description": "We produce quality products",
                        "location": "lagos",
                        "category": "Production"
                        "companyImage": ""
                  },
                  "message": "Bussiness updated!",
                  "error": false
              }

This resource has a delete action. The server will return a 204 response without a body.

### Delete a Business [DELETE]

+ Response 204

## Business [/v1/businesses{?location}]

+ Parameters
    + location: "abuja" (optional, string) - The location of businesses to return

### List all questions [GET]

+ Response 200 (application/json)

    + Body

            {
                "Businesses": [
                      {
                          "businessId": "3",
                          "businessName": "Sommyj Security",
                          "userId": "1",
                          "description": "We will protect you no matter what, trust us.",
                          "location": "abuja",
                          "category": "security"
                          "companyImage": ""
                      },{
                          "businessId": "6",
                          "businessName": "jay ltd",
                          "userId": "12",
                          "description": "We produce quality products",
                          "location": "abuja",
                          "category": "production"
                          "companyImage": ""
                     }

                ],
                "message": "Success",
                "error": false
            }

## Business [/v1/businesses{?category}]

+ Parameters
    + category: "production" (optional, string) - The category of businesses to return

### List all questions [GET]

+ Response 200 (application/json)

    + Body

            {
                "Businesses": [
                      {
                          "businessId": "2",
                          "businessName": "Sommyj",
                          "userId": "3",
                          "description": "The best production",
                          "location": "lagos",
                          "category": "production"
                          "companyImage": ""
                      },{
                          "businessId": "6",
                          "businessName": "jay ltd",
                          "userId": "12",
                          "description": "We produce quality products",
                          "location": "abuja",
                          "category": "production"
                          "companyImage": ""
                     }

                ],
                "message": "Success",
                "error": false
            }
`
## Reviews [/v1/businesses/{businessId}/reviews]

+ Parameters
    + businessId: 2 (required, number) - ID of the Business in form of an integer

This resource has an action to retrieve business review details.

### View a Business review Details [GET]

+ Response 200 (application/json)

        + Body

                {
                    "Reviews": [
                          {
                              "id": 1,
                              "response": "very good.",
                              "userId": "3",
                              "businessId": "2"
                          },
                          {
                              "id": 2,
                              "response": "Excellent",
                              "userId": "1",
                              "businessId": "2"
                          }
                    ],
                    "message": "Success",
                    "error": false
                }

### Reviews on a Business [POST]

This action allows you to write a review about a Business.
It takes a x-www-form-urlencoded payload as part of the request as follows:

+ Request (application/x-www-form-urlencoded)

            {
              response: 'confirm move on',
              userId: '3',
              businessId: '2',
            };


+ Response 201 (application/json)

          + Body

                {
                    "Reviews": {
                          "id": 4,
                          "response": "confirm move on",
                          "userId": "3",
                          "businessId": "2"
                    },
                    "message": "Success",
                    "error": false
                }
