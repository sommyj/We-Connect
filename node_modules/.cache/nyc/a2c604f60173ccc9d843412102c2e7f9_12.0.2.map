{"version":3,"sources":["reviews.js"],"names":["Review","model","reviewsController","create","req","res","body","response","userId","businessId","status","send","message","params","then","review","catch","error","list","findAll","where","reviews","update","findById","reviewId","destroy"],"mappings":"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","file":"reviews.js","sourceRoot":"/home/somto/Andela/We-Connect/server/server/controllers","sourcesContent":["import model from '../models';\n\nconst Review = model.Review;\n\nconst reviewsController = {\n  create(req, res) {\n\n    if (!req.body.response || !req.body.userId || !req.body.businessId) {\n      return res.status(206).send({message: 'Incomplete field'});\n    }\n\n    return Review\n      .create({\n        response: req.body.response,\n        userId: req.body.userId,\n        businessId: req.params.businessId,\n      })\n      .then(review => res.status(201).send(review))\n      .catch(error => res.status(400).send(error));\n  },\n  list(req, res) {\n    return Review\n      .findAll({where: {businessId: req.params.businessId}})\n      .then(reviews => res.status(200).send(reviews))\n      .catch(error => res.status(400).send(error));\n  },\n  update(req, res) {\n    return Review\n      .findById(req.params.reviewId)\n      .then(review => {\n        if(!review) {\n          return res.status(404).send({message: 'Review not found'});\n        }\n        if(review.userId != req.body.userId) {\n          return res.status(400).send({message: 'User can not be altered'});\n        }\n        if(review.businessId != req.body.businessId) {\n          return res.status(400).send({message: 'Businesses can not be altered'});\n        }\n        return review\n          .update({\n            response: req.body.response || review.response,\n            userId: req.body.userId || review.userId,\n            businessId: req.params.businessId,\n          })\n          .then(review => res.status(200).send(review))\n          .catch(error => res.status(400).send(error));\n      }).catch(error => res.status(400).send(error));\n  },\n  destroy(req, res) {\n    return Review\n      .findById(req.params.reviewId)\n      .then(review => {\n        if(!review) {\n          return res.status(404).send({message: 'Review not found'});\n        }\n        if(review.userId != req.body.userId) {\n          return res.status(404).send({message: 'User not found'});\n        }\n        return review\n          .destroy()\n          .then(() => {return res.status(204).send()})\n          .catch(error => res.status(400).send(error));\n      }).catch(error => res.status(400).send(error));\n  },\n\n};\n\nexport default reviewsController;\n"]}