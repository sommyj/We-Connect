{"version":3,"sources":["users.js"],"names":["model","User","Business","upload","dest","fileSizeLimit","renameFile","tempPath","targetPath","fs","rename","err","deleteFile","unlink","fileTypeHandleError","res","status","json","message","error","fileSizeHandleError","fileFilterMethod","req","fileErrorArray","fileSizeError","fileTypeError","filePath","file","path","Date","toISOString","originalname","mimetype","size","substring","length","usersController","single","create","fileFilterValues","body","title","firstname","lastname","username","password","email","gender","dob","phone","send","hashedPassword","bcrypt","hashSync","street","city","state","country","userImage","then","token","jwt","sign","id","user","app","get","expiresIn","auth","catch","check","findOne","where","list","findAll","include","as","users","update","findById","params","userId","previousImage","userUpdate","destroy","retrieve"],"mappings":"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","file":"users.js","sourceRoot":"/home/somto/Andela/We-Connect/server/server/controllers","sourcesContent":["import multer from 'multer';\nimport fs from 'file-system';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\nimport model from '../models';\nimport app from '../../app';\n\nconst [User, Business] = [model.User, model.Business];\n\nconst upload = multer({\n  dest: './usersUploads/'\n});\n\nconst fileSizeLimit = 1024 * 1024 * 2;\n\n/**\n * rename file to an appropriate name\n * @param {String} tempPath The temporary path name.\n * @param {String} targetPath The target path name.\n * @returns {void} nothing.\n */\nconst renameFile = (tempPath, targetPath) => {\n  fs.rename(tempPath, targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n// file type handleError\nconst fileTypeHandleError = (res) => {\n  res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n};\n\n// file size handleError\nconst fileSizeHandleError = (res) => {\n  res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n};\n\n/* File filter handle method */\nconst fileFilterMethod = (req, res) => {\n  const fileErrorArray = [];\n  let fileSizeError = false;\n  let fileTypeError = false;\n  let filePath = '';\n\n  if (req.file) {\n    const tempPath = `./${req.file.path}`;\n    const targetPath = `./usersUploads/${new Date().toISOString() + req.file.originalname}`;\n    if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n      if (req.file.size <= fileSizeLimit) { renameFile(tempPath, targetPath);\n        // remove the dot in targetPath\n        filePath = targetPath.substring(1, targetPath.length);\n      } else { deleteFile(tempPath);\n        fileSizeError = true;\n      }\n    } else { deleteFile(tempPath);\n      fileTypeError = true;\n    }\n  }\n  fileErrorArray[0] = fileSizeError;\n  fileErrorArray[1] = fileTypeError;\n  fileErrorArray[2] = filePath;\n\n  return fileErrorArray;\n}\n\n\nconst usersController = {\n  upload: upload.single('userImage'), // image upload\n  // create a user\n  create(req, res) {\n    //implementing the file filter method\n    const fileFilterValues = fileFilterMethod(req, res);\n    const fileSizeError = fileFilterValues[0];\n    const fileTypeError = fileFilterValues[1];\n    const filePath = fileFilterValues[2];\n\n    if(fileSizeError) return fileSizeHandleError(res);\n    if(fileTypeError) return fileTypeHandleError(res);\n\n    /* Required feilds */\n    if (!req.body.title || !req.body.firstname || !req.body.lastname ||\n      !req.body.username || !req.body.password || !req.body.email ||\n      !req.body.gender || !req.body.dob || !req.body.phone) {\n      if (filePath) { deleteFile(`./${filePath}`); }\n      return res.status(206).send({ message: 'Incomplete field' });\n    }\n\n    const hashedPassword = bcrypt.hashSync(req.body.password, 8);\n\n    return User\n      .create({\n        title: req.body.title, firstname: req.body.firstname, lastname: req.body.lastname,\n        username: req.body.username, password: hashedPassword, email: req.body.email,\n        gender: req.body.gender, street: req.body.street, city: req.body.city,\n        state: req.body.state, country: req.body.country, dob: req.body.dob,\n        phone: req.body.phone, userImage: filePath\n      })\n      .then(user => {\n          const token = jwt.sign({ id: user.id }, app.get('superSecret'),\n          { expiresIn: 86400 // expires in 24 hours\n          });\n        return res.status(201).send({user, auth: true, token: token})\n      })\n      .catch((error) => {\n        if (filePath) deleteFile(`./${filePath}`);\n        return res.status(400).send(error);\n      });\n\n  },\n  // login with username and password\n  check(req, res) {\n    return User\n      .findOne({ where: { username: req.body.username, password: req.body.password } })\n      .then((user) => {\n        if (!user) return res.status(404).send({ message: 'User not found' });\n        return res.status(200).send(user);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n  list(req, res) {\n    return User\n      .findAll({\n        include: [{ model: Business, as: 'businesses' }]\n      })\n      .then(users => res.status(200).send(users))\n      .catch(error => res.status(400).send(error));\n  },\n  // update user\n  update(req, res) {\n    //implementing the file filter method\n    const fileFilterValues = fileFilterMethod(req, res);\n    const fileSizeError = fileFilterValues[0];\n    const fileTypeError = fileFilterValues[1];\n    const filePath = fileFilterValues[2];\n\n    if(fileSizeError) return fileSizeHandleError(res);\n    if(fileTypeError) return fileTypeHandleError(res);\n\n    return User\n      .findById(req.params.userId, {\n        include: [{ model: Business, as: 'businesses' }]\n      })\n      .then((user) => {\n        if (!user) {\n          // if file and url is not empty delete img for updation\n          if (filePath) deleteFile(`./${filePath}`);\n          return res.status(404).send({ message: 'User not found' });\n        }\n        // holds the url of the image before update in other not to loose it\n        const previousImage = user.userImage;\n        return user\n          .update({\n            title: req.body.title || user.title, firstname: req.body.firstname || user.firstname,\n            lastname: req.body.lastname || user.lastname, username: req.body.username || user.username,\n            password: req.body.password || user.password, email: req.body.email || user.email,\n            gender: req.body.gender || user.gender, street: req.body.street || user.street,\n            city: req.body.city || user.city, state: req.body.state || user.state,\n            country: req.body.country || user.country, dob: req.body.dob || user.dob,\n            phone: req.body.phone || user.phone, userImage: filePath || user.userImage,\n          })\n          .then((userUpdate) => {\n            // if file and url is not empty delete img for updation\n            if (filePath) {\n              if (previousImage) deleteFile(`./${previousImage}`);\n            }\n            return res.status(200).send(userUpdate);\n          }) // Send back the updated user\n          .catch((error) => {\n            if (filePath) deleteFile(`./${filePath}`);\n            return res.status(400).send(error);\n          });\n      }).catch(error => res.status(400).send(error));\n  },\n  // delete user\n  destroy(req, res) {\n    return User\n      .findById(req.params.userId)\n      .then((user) => {\n        if (!user) return res.status(404).send({ message: 'User not found' });\n\n        return user\n          .destroy()\n          .then(() => {\n            if (user.userImage) deleteFile(`./${user.userImage}`);\n            return res.status(204).send();\n          })\n          .catch(error => res.status(400).send(error));\n      }).catch(error => res.status(400).send(error));\n  },\n  // get a user\n  retrieve(req, res) {\n    return User\n      .findById(req.params.userId, {\n        include: [{ model: Business, as: 'businesses' }]\n      })\n      .then((user) => {\n        if (!user) return res.status(404).send({ message: 'User not found' });\n        return res.status(200).send(user);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n};\n\nexport default usersController;\n"]}