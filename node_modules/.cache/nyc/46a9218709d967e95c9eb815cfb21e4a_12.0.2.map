{"version":3,"sources":["businesses-spec.js"],"names":["process","env","NODE_ENV","chai","should","request","app","Business","model","User","copyFile","src","dest","readStream","fs","createReadStream","pipe","createWriteStream","deleteFile","targetPath","unlink","err","describe","beforeEach","done","destroy","where","force","then","it","get","end","res","have","status","body","message","be","eql","post","field","attach","a","property","create","title","firstname","lastname","username","password","email","gender","street","city","state","country","dob","Date","phone","userImage","user","dataValues","id","companyImage","path","resolve","businessName","description","datefound","category","userId","console","log","business","query","put","filename","join","destDir","access","mkdirSync","delete"],"mappings":"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","file":"businesses-spec.js","sourceRoot":"/home/somto/Andela/We-Connect/server/test","sourcesContent":["//During the test the env variable is set to test\nprocess.env.NODE_ENV = 'test';\n\n// Require the dev-dependencies\nimport chai from 'chai';\nimport supertest from 'supertest';\nimport fs from 'file-system';\nimport path from 'path';\n\nimport app from '../app';\nimport model from '../server/models';\n\nchai.should();\nconst request = supertest(app);\nconst Business = model.Business;\nconst User = model.User;\n\n/**\n * copy file from a directory to another\n * @param {String} src The source you are copying from.\n * @param {String} dest The destination you are copying to.\n * @returns {void} nothing.\n */\nconst copyFile = (src, dest) => {\n  const readStream = fs.createReadStream(src);\n\n  readStream.pipe(fs.createWriteStream(dest));\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\ndescribe('Businesses', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({ where: {}, force: true });\n    Business.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  // after(() => {\n  //   request.server.close();\n  // });\n\n  describe('/GET business', () => {\n    it('it should GET all the businesses', (done) => {\n      request\n        .get('/v1/businesses/')\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.message.should.be.eql('Businesses not found');\n          done();\n        });\n    });\n  });\n\n  describe('/POST business', () => {\n    it(`it should not POST a business without description, businessName, userId,\n    description, location and category`, (done) => {\n      request\n        .post('/v1/businesses/')\n        .field('businessName', '')\n        .field('userId', '')\n        .field('description', '')\n        .field('street', '')\n        .field('city', '')\n        .field('state', '')\n        .field('country', '')\n        .field('datefound', '')\n        .field('email', '')\n        .field('phone', '')\n        .field('category', '')\n        .attach('companyImage', './testFile.png')\n        .end((err, res) => {\n          res.should.have.status(206);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Incomplete fields');\n\n          done();\n        });\n    });\n\n    it('it should POST a business', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: new Date('2015-11-04'),\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n            request\n              .post('/v1/businesses/')\n              .field('businessName', 'Sommyj')\n              .field('userId', user.dataValues.id)\n              .field('description', 'We produce quality products')\n              .field('street', '4, badamus str')\n              .field('city', 'Stoppe')\n              .field('state', 'Lagos')\n              .field('country', 'Nigeria')\n              .field('datefound', '2015-11-04')\n              .field('email', 'sommyj@gmail.com')\n              .field('phone', '021316')\n              .field('category', 'Production')\n              .attach('companyImage', './testFile.png')\n              .end((err, res) => {\n                res.should.have.status(201); // 'success' status\n                res.body.should.be.a('object');\n                res.body.should.have.property('id').eql(res.body.id);\n                res.body.should.have.property('businessName').eql('Sommyj');\n                res.body.should.have.property('userId').eql(user.dataValues.id);\n                res.body.should.have.property('description').eql('We produce quality products');\n                res.body.should.have.property('state').eql('Lagos');\n                res.body.should.have.property('country').eql('Nigeria');\n                res.body.should.have.property('email').eql('sommyj@gmail.com');\n                res.body.should.have.property('category').eql('Production');\n                res.body.should.have.property('companyImage').eql(res.body.companyImage);\n\n                // delete test image file\n                if (path.resolve('./testFile.png')) {\n                  deleteFile(`./${res.body.companyImage}`);\n                }\n                done();\n              });\n        });\n    });\n\n\n    it('it should POST a business without image', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: new Date('2015-11-04'),\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n      request\n        .post('/v1/businesses/')\n        .field('businessName', 'Sommyj')\n        .field('userId', user.dataValues.id)\n        .field('description', 'We produce quality products')\n        .field('street', '4, badamus str')\n        .field('city', 'Stoppe')\n        .field('state', 'Lagos')\n        .field('country', 'Nigeria')\n        .field('datefound', '2015-11-04')\n        .field('email', 'sommyj@gmail.com')\n        .field('phone', '021316')\n        .field('category', 'Production')\n        .attach('companyImage', '')\n        .end((err, res) => {\n          res.should.have.status(201); // 'success' status\n          res.body.should.be.a('object');\n          res.body.should.have.property('id').eql(res.body.id);\n          res.body.should.have.property('businessName').eql('Sommyj');\n          res.body.should.have.property('userId').eql(user.dataValues.id);\n          res.body.should.have.property('description').eql('We produce quality products');\n          res.body.should.have.property('state').eql('Lagos');\n          res.body.should.have.property('category').eql('Production');\n          res.body.should.have.property('companyImage').eql(res.body.companyImage);\n\n          done();\n        });\n      });\n    });\n\n    it('it should not POST a business when image file type not jpg/png', (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: new Date('2015-11-04'),\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n            request\n              .post('/v1/businesses/')\n              .field('businessName', 'Sommyj')\n              .field('userId', user.dataValues.id)\n              .field('description', 'We produce quality products')\n              .field('street', '4, badamus str')\n              .field('city', 'Stoppe')\n              .field('state', 'Lagos')\n              .field('country', 'Nigeria')\n              .field('datefound', '2015-11-04')\n              .field('email', 'sommyj@gmail.com')\n              .field('phone', '021316')\n              .field('category', 'Production')\n              .attach('companyImage', './testFileType.txt')\n              .end((err, res) => {\n                res.should.have.status(403);\n                res.body.should.be.a('object');\n                res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n                done();\n              });\n        });\n    });\n\n    it(`it should not UPDATE a business\n    when image file size is larger than 2mb`, (done) => {\n      request\n        .post('/v1/businesses/')\n        .field('businessId', '1')\n        .field('businessName', 'Sommyj')\n        .field('userId', '22')\n        .field('description', 'We produce quality products')\n        .field('location', 'lagos')\n        .field('category', 'Production')\n        .attach('companyImage', './testFileSize.jpg')\n        .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('file should not be more than 2mb!');\n          res.body.should.have.property('error').eql(true);\n          done();\n        });\n    });\n  });\n\n  /*\n  * Test the /GET/ route\n  */\n  describe('/GET/ business', () => {\n    it('it should GET all businesses', (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy1',\n            password: '123',\n            email: 'somto1@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '66976998',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Sommy1',\n            description: 'We produce quality products',\n            street: '4 jvjvkjvj, kfkjfj',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'wecon@bfbf.b',\n            phone: '34165448',\n            category: 'Production',\n            companyImage: '',\n            userId: user.dataValues.id,\n          }).then(business => { console.log(business.dataValues);})\n\n          request\n            .get('/v1/businesses')\n            .end((err, res) => {\n              // res.should.have.status(200);\n              // res.body.should.be.a('array');\n              // res.body.should.have.property('0');\n              // res.body.message.should.be.eql('Businesses not found');\n\n              done();\n            });\n          });\n  });\n\n    it('it should GET a business by the given id', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: new Date('2015-11-04'),\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n            Business.create({\n              businessName: 'Sommy_j',\n              description: 'We produce quality products',\n              street: '3 jvjvkjvj, kfkjfj',\n              city: 'Sinner',\n              state: 'Lagos',\n              country: 'Nigeria',\n              datefound: '2015-11-04',\n              email: 'wecon@bfbf.b',\n              phone: '32165485',\n              category: 'Production',\n              companyImage: '',\n              userId: user.dataValues.id,\n            }).then(business => {\n\n            request\n              .get(`/v1/businesses/${business.dataValues.id}`)\n              .end((err, res) => {\n                res.should.have.status(200);\n                res.body.should.be.a('object');\n                res.body.should.have.property('businessName').eql('Sommy_j');\n                res.body.should.have.property('userId').eql(user.dataValues.id);\n                res.body.should.have.property('description').eql('We produce quality products');\n                res.body.should.have.property('state').eql('Lagos');\n                res.body.should.have.property('country').eql('Nigeria');\n                res.body.should.have.property('category').eql('Production');\n                res.body.should.have.property('id').eql(business.dataValues.id);\n                res.body.should.have.property('companyImage').eql('');\n                done();\n              });\n            });\n          });\n    });\n\n    it('it should not GET a business by the given wrong id', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: new Date('2015-11-04'),\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n      Business.create({\n        businessName: 'Sommy_j',\n        description: 'We produce quality products',\n        street: '3 jvjvkjvj, kfkjfj',\n        city: 'Sinner',\n        state: 'Lagos',\n        country: 'Nigeria',\n        datefound: '2015-11-04',\n        email: 'wecon@bfbf.b',\n        phone: '32165485',\n        category: 'Production',\n        companyImage: '',\n        userId: user.dataValues.id,\n      })\n\n      request\n        .get('/v1/businesses/13')\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.message.should.be.eql('Business not found');\n          done();\n        });\n      });\n    });\n\n    it('it should GET a business by the given category', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n\n      Business.create({\n        businessName: 'Sommy1',\n        description: 'We produce quality products',\n        street: '4 jvjvkjvj, kfkjfj',\n        city: 'Sinner',\n        state: 'Lagos',\n        country: 'Nigeria',\n        datefound: '2015-11-04',\n        email: 'wecon@bfbf.b',\n        phone: '34165448',\n        category: 'Production',\n        companyImage: '',\n        userId: user.dataValues.id,\n      }).then(business => { console.log(business.dataValues);})\n\n      request\n        .get('/v1/businesses/')\n        .query(`category=Production`) // /businesses?category='Production'\n        .end((err, res) => {\n          // res.should.have.status(200);\n          // res.body.should.be.a('array');\n          // res.body.should.have.keys('0');\n          // res.body.should.have.property('0');\n          // res.body.Businesses.should.have.deep.property('0', business).property('businessId').eql('11');\n          // res.body.Businesses.should.have.deep.property('0', business).property('businessName').eql('Sommyj');\n          // res.body.Businesses.should.have.deep.property('0', business).property('userId');\n          // res.body.Businesses.should.have.deep.property('0', business).property('description');\n          // res.body.Businesses.should.have.deep.property('0', business).property('location');\n          // res.body.Businesses.should.have.deep.property('0', business).property('category').eql('Production');\n          // res.body.Businesses.should.have.deep.property('0', business).property('companyImage').eql('');\n          // res.body.error.should.be.eql(false);\n          // res.body.message.should.be.eql('Success');\n          done();\n        });\n      });\n    });\n\n//\n//     it('it should not GET a business by the given wrong category', (done) => {\n//       const business = {\n//         businessId: '11',\n//         businessName: 'Sommyj',\n//         userId: '22',\n//         description: 'We produce quality products',\n//         location: 'lagos',\n//         category: 'Production',\n//         registered: '2015-11-04T22:09:36Z',\n//         companyImage: '',\n//       };\n//\n//       // Passing business to business model\n//       Businesses.push(business);\n//       request\n//         .get('/v1/businesses')\n//         .query('category=Sales') // /businesses?category='Production'\n//         .end((err, res) => {\n//           res.should.have.status(404);\n//           res.body.should.be.a('object');\n//           res.body.message.should.be.eql('Business not found');\n//           res.body.error.should.be.eql(true);\n//           done();\n//         });\n//     });\n//\n//\n//     it('it should GET a business by the given location', (done) => {\n//       const business = [\n//         {\n//           businessId: '11',\n//           businessName: 'Sommyj',\n//           userId: '22',\n//           description: 'We produce quality products',\n//           location: 'lagos',\n//           category: 'Production',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//         {\n//           businessId: '12',\n//           businessName: 'amsomee',\n//           userId: '23',\n//           description: 'We produce quality service',\n//           location: 'owerri',\n//           category: 'Importation',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//       ];\n//\n//       // Passing business to business model\n//       Businesses.push(business[0]);\n//       Businesses.push(business[1]);\n//       request\n//         .get('/v1/businesses')\n//         .query(`location=${business[0].location}`) // /businesses?location='lagos'\n//         .end((err, res) => {\n//           res.should.have.status(200);\n//           res.body.should.be.a('object');\n//           res.body.Businesses.should.be.a('array');\n//           res.body.Businesses.should.have.keys('0');\n//           res.body.Businesses.should.have.property('0');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('businessId').eql('11');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('businessName').eql('Sommyj');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('userId');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('description');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('location');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('category').eql('Production');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('companyImage').eql('');\n//           res.body.message.should.be.eql('Success');\n//           res.body.error.should.be.eql(false);\n//           done();\n//         });\n//     });\n//\n//\n//     it('it should not GET a business by the given wrong location', (done) => {\n//       const business = [\n//         {\n//           businessId: '11',\n//           businessName: 'Sommyj',\n//           userId: '22',\n//           description: 'We produce quality products',\n//           location: 'lagos',\n//           category: 'Production',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//         {\n//           businessId: '12',\n//           businessName: 'amsomee',\n//           userId: '23',\n//           description: 'We produce quality service',\n//           location: 'owerri',\n//           category: 'Importation',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//       ];\n//\n//       // Passing business to business model\n//       Businesses.push(business[0]);\n//       Businesses.push(business[1]);\n//       request\n//         .get('/v1/businesses')\n//         .query('location=abuja') // /businesses?location='lagos'\n//         .end((err, res) => {\n//           res.should.have.status(404);\n//           res.body.should.be.a('object');\n//           res.body.message.should.be.eql('Business not found');\n//           res.body.error.should.be.eql(true);\n//           done();\n//         });\n//     });\n//\n//\n//     it('it should GET a business by the given location && category', (done) => {\n//       const business = [\n//         {\n//           businessId: '11',\n//           businessName: 'Sommyj',\n//           userId: '22',\n//           description: 'We produce quality products',\n//           location: 'lagos',\n//           category: 'Production',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//         {\n//           businessId: '12',\n//           businessName: 'Sommy',\n//           userId: '23',\n//           description: 'We produce quality service',\n//           location: 'lagos',\n//           category: 'Production',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//       ];\n//\n//       // Passing business to business model\n//       Businesses.push(business[0]);\n//       Businesses.push(business[1]);\n//\n//       request\n//         .get('/v1/businesses')\n//         .query({ location: 'lagos', category: 'Production' }) // /businesses?location='lagos'&category='Production'\n//         .end((err, res) => {\n//           res.should.have.status(200);\n//           res.body.should.be.a('object');\n//           res.body.Businesses.should.have.property('0');\n//           res.body.Businesses.should.have.property('1');\n//           res.body.Businesses.should.have.deep.property('0', business[0]);\n//           res.body.Businesses.should.have.deep.property('1', business[1]);\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('businessId').eql('11');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('businessName').eql('Sommyj');\n//           res.body.Businesses.should.have.deep.property('1', business[1]).property('businessId').eql('12');\n//           res.body.Businesses.should.have.deep.property('1', business[1]).property('businessName').eql('Sommy');\n//           res.body.Businesses.should.have.deep.property('0', business[0]).property('category').eql('Production');\n//           res.body.Businesses.should.have.deep.property('1', business[1]).property('category').eql('Production');\n//           res.body.message.should.be.eql('Success');\n//           res.body.error.should.be.eql(false);\n//           done();\n//         });\n//     });\n//\n//     it('it should not GET a business by the given location && category', (done) => {\n//       const business = [\n//         {\n//           businessId: '11',\n//           businessName: 'Sommyj',\n//           userId: '22',\n//           description: 'We produce quality products',\n//           location: 'lagos',\n//           category: 'Production',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//         {\n//           businessId: '12',\n//           businessName: 'Sommy',\n//           userId: '23',\n//           description: 'We produce quality service',\n//           location: 'abuja',\n//           category: 'Services',\n//           registered: '2015-11-04T22:09:36Z',\n//           companyImage: '',\n//         },\n//       ];\n//\n//       // Passing business to business model\n//       Businesses.push(business[0]);\n//       Businesses.push(business[1]);\n//\n//       request\n//         .get('/v1/businesses')\n//         .query({ location: 'abuja', category: 'Production' }) // /businesses?location ='lagos'&category='Production'\n//         .end((err, res) => {\n//           res.should.have.status(404);\n//           res.body.should.be.a('object');\n//           res.body.message.should.be.eql('Business not found');\n//           res.body.error.should.be.eql(true);\n//           done();\n//         });\n//     });\n  });\n\n  /*\n   * Test the /PUT/:id route\n   */\n  describe('/PUT/:id business', () => {\n    it('it should UPDATE a business given the id', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'som',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '888888',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n      Business.create({\n        businessName: 'Comango',\n        description: 'We manufacture quality products',\n        street: 'demfec, spotless',\n        city: 'Sinner',\n        state: 'Lagos',\n        country: 'Nigeria',\n        datefound: '2015-11-04',\n        email: 'wecon@bfbf.b',\n        phone: '888888',\n        category: 'Production',\n        companyImage: '',\n        userId: user.dataValues.id,\n      }).then(business => {\n\n        request\n          .put(`/v1/businesses/${business.dataValues.id}`)\n          .field('businessName', 'Sommyj Enterprise')\n          .field('userId', user.dataValues.id)\n          .field('description', 'We sale quality products')\n          .field('street', '4, badamus str')\n          .field('city', 'Stoppe')\n          .field('state', 'port-harcourt')\n          .field('country', 'Nigeria')\n          .field('datefound', '2015-11-04')\n          .field('email', 'sommyj@gmail.com')\n          .field('phone', '021316')\n          .field('category', 'Sales')\n          .attach('companyImage', './testFile.png')\n          .end((err, res) => {\n            res.should.have.status(200); // 'success' status\n            res.body.should.be.a('object');\n            res.body.should.have.property('id').eql(business.dataValues.id);\n            res.body.should.have.property('businessName').eql('Sommyj Enterprise');\n            res.body.should.have.property('userId').eql(user.dataValues.id+'');\n            res.body.should.have.property('description').eql('We sale quality products');\n            res.body.should.have.property('state').eql('port-harcourt');\n            res.body.should.have.property('category').eql('Sales');\n            res.body.should.have.property('companyImage').eql(res.body.companyImage);\n\n            // delete test image file\n            if (path.resolve('./testFile.png')) {\n              deleteFile(`./${res.body.companyImage}`);\n            }\n            done();\n          });\n        });\n      });\n    });\n\n\n    it('it should not UPDATE a business given the wrong id', (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'somm',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '8888884',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n        Business.create({\n          businessName: 'Comango.com',\n          description: 'We manufacture quality products',\n          street: 'demfec, spotless',\n          city: 'Sinner',\n          state: 'Lagos',\n          country: 'Nigeria',\n          datefound: '2015-11-04',\n          email: 'wecon@bfbf.b',\n          phone: '8888884',\n          category: 'Production',\n          companyImage: '',\n          userId: user.dataValues.id,\n        }).then(business => {\n\n\n        request\n          .put(`/v1/businesses/12`)\n          .field('businessName', 'Sommyj Enterprise')\n          .field('userId', user.dataValues.id)\n          .field('description', 'We sale quality products')\n          .field('street', '4, badamus str')\n          .field('city', 'Stoppe')\n          .field('state', 'port-harcourt')\n          .field('country', 'Nigeria')\n          .field('datefound', '2015-11-04')\n          .field('email', 'sommyj@gmail.com')\n          .field('phone', '021316')\n          .field('category', 'Sales')\n          .attach('companyImage', './testFile.png')\n          .end((err, res) => {\n            res.should.have.status(404);\n            res.body.should.be.a('object');\n            res.body.should.have.property('message').eql('Business not found');\n\n            done();\n          });\n        });\n      });\n    });\n\n    it(`it should UPDATE a business given the id and\n    maintain already existing fields and file if none is entered`, (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommj',\n            password: '123',\n            email: 'somtoj@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '88888845',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Comango.com',\n            description: 'We manufacture quality products',\n            street: 'demfec, spotless',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'wecon@bfbf.b',\n            phone: '8888884',\n            category: 'Production',\n            companyImage: 'businessesUploads/2018-07-23T16:04:36.226ZNIIT Certificate (copy).resized.jpg',\n            userId: user.dataValues.id,\n          }).then(business => {\n\n        request\n          .put(`/v1/businesses/${business.dataValues.id}`)\n          .field('businessName', '')\n          .field('userId', '')\n          .field('description', '')\n          .field('street', '')\n          .field('city', '')\n          .field('state', '')\n          .field('country', '')\n          .field('datefound', '')\n          .field('email', '')\n          .field('phone', '')\n          .field('category', '')\n          .attach('companyImage', '')\n          .end((err, res) => {\n            res.should.have.status(200); // 'success' status\n            res.body.should.be.a('object');\n            res.body.should.have.property('id').eql(business.dataValues.id);\n            res.body.should.have.property('businessName').eql('Comango.com');\n            res.body.should.have.property('userId').eql(user.dataValues.id);\n            res.body.should.have.property('description').eql('We manufacture quality products');\n            res.body.should.have.property('state').eql('Lagos');\n            res.body.should.have.property('country').eql('Nigeria');\n            res.body.should.have.property('category').eql('Production');\n            res.body.should.have.property('companyImage').eql(res.body.companyImage);\n\n            done();\n          });\n        });\n      });\n    });\n\n\n    it('it should UPDATE a business given the id and replace already existing file', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'somman',\n            password: '123',\n            email: 'somtojy@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '8888453',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Mango.com',\n            description: 'We manufacture quality products',\n            street: 'demfec, spotless',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'stop@bfbf.bf',\n            phone: '888888453',\n            category: 'Production',\n            companyImage: 'businessesUploads/testFile.png',\n            userId: user.dataValues.id,\n          }).then(business => {\n\n\n      const filename = 'testFile.png';\n      const src = path.join('./', filename);\n      const destDir = path.join('./', 'businessesUploads');\n\n      fs.access(destDir, (err) => {\n        if (err) { fs.mkdirSync(destDir); }\n\n        copyFile(src, path.join(destDir, filename));\n      });\n\n\n        request\n          .put(`/v1/businesses/${business.dataValues.id}`)\n          .field('businessName', 'Sommy Enterprise')\n          .field('userId', user.dataValues.id)\n          .field('description', 'We sale quality products')\n          .field('street', '4, badamus str')\n          .field('city', 'Stoppe')\n          .field('state', 'port-harcourt')\n          .field('country', 'Nigeria')\n          .field('datefound', '2015-11-04')\n          .field('email', 'sommyj@gmail.com')\n          .field('phone', '021316')\n          .field('category', 'Sales')\n          .attach('companyImage', './testFile.png')\n          .end((err, res) => {\n            res.should.have.status(200); // 'success' status\n            res.body.should.be.a('object');\n            res.body.should.have.property('id').eql(business.dataValues.id);\n            res.body.should.have.property('businessName').eql('Sommy Enterprise');\n            res.body.should.have.property('userId').eql(user.dataValues.id+'');\n            res.body.should.have.property('description').eql('We sale quality products');\n            res.body.should.have.property('state').eql('port-harcourt');\n            res.body.should.have.property('country').eql('Nigeria');\n            res.body.should.have.property('category').eql('Sales');\n            res.body.should.have.property('companyImage').eql(res.body.companyImage);\n\n            // delete test image file\n            if (path.resolve('./testFile')) {\n              deleteFile(`./${res.body.companyImage}`);\n            }\n            done();\n          });\n        });\n      });\n    });\n\n    it('it should not UPDATE a business when image file type not jpg/png', (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'somman1',\n            password: '123',\n            email: 'somto1@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '88884531',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Come.com',\n            description: 'We use quality products',\n            street: 'demzec, zpotless',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'ztop@bfbf.bf',\n            phone: '888188453',\n            category: 'Production',\n            companyImage: 'businessesUploads/testFile.png',\n            userId: user.dataValues.id,\n          }).then(business => {\n\n          request\n            .put(`/v1/businesses/${business.dataValues.id}`)\n            .field('businessName', 'Sommy Enterprise')\n            .field('userId', user.dataValues.id)\n            .field('description', 'We sale quality products')\n            .field('street', '4, badamus str')\n            .field('city', 'Stoppe')\n            .field('state', 'port-harcourt')\n            .field('country', 'Nigeria')\n            .field('datefound', '2015-11-04')\n            .field('email', 'sommyj@gmail.com')\n            .field('phone', '021316')\n            .field('category', 'Sales')\n            .attach('companyImage', './testFileType.txt')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n          });\n      });\n    });\n\n\n    it(`it should not UPDATE a business\n    when image file size is larger than 2mb`, (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'somman1',\n            password: '123',\n            email: 'somto1@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '88884531',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Come.com',\n            description: 'We use quality products',\n            street: 'demzec, zpotless',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'ztop@bfbf.bf',\n            phone: '888188453',\n            category: 'Production',\n            companyImage: 'businessesUploads/testFile.png',\n            userId: user.dataValues.id,\n          }).then(business => {\n\n          request\n            .put(`/v1/businesses/${business.dataValues.id}`)\n            .field('businessName', 'Sommy Limited')\n            .field('userId', user.dataValues.id)\n            .field('description', 'We sale quality products')\n            .field('street', '4, badamus str')\n            .field('city', 'Stoppe')\n            .field('state', 'port-harcourt')\n            .field('country', 'Nigeria')\n            .field('datefound', '2015-11-04')\n            .field('email', 'sommyj@gmail.com')\n            .field('phone', '02131684')\n            .field('category', 'Sales')\n            .attach('companyImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('file should not be more than 2mb!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n          });\n        });\n    });\n  });\n\n  /*\n  * Test the /DELETE/:id route\n  */\n  describe('/DELETE/:id business', () => {\n    it('it should DELETE a business given the id', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'somman11',\n            password: '123',\n            email: 'somto12@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '88584531',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Some.com',\n            description: 'We use quality products',\n            street: 'demzec, zpotless',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'ztod@bfbf.bf',\n            phone: '88188453',\n            category: 'Production',\n            companyImage: 'businessesUploads/testFile.png',\n            userId: user.dataValues.id,\n          }).then(business => {\n\n          const filename = 'testFile.png';\n          const src = path.join('./', filename);\n          const destDir = path.join('./', 'businessesUploads');\n\n          // copy image file to businessesUploads\n          fs.access(destDir, (err) => {\n            if (err) { fs.mkdirSync(destDir); }\n\n            copyFile(src, path.join(destDir, filename));\n          });\n\n          request\n            .delete(`/v1/businesses/${business.dataValues.id}`)\n            .end((err, res) => {\n              res.should.have.status(204);\n              res.body.should.be.a('object');\n              done();\n            });\n          });\n        });\n    });\n\n    it('it should not DELETE a business given the wrong id', (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'somman12',\n            password: '123',\n            email: 'sommy12@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '88584530',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n          Business.create({\n            businessName: 'Some1.com',\n            description: 'We use quality products',\n            street: 'demzec, zpotless',\n            city: 'Sinner',\n            state: 'Lagos',\n            country: 'Nigeria',\n            datefound: '2015-11-04',\n            email: 'ztod1@bfbf.bf',\n            phone: '881884530',\n            category: 'Production',\n            companyImage: 'businessesUploads/testFile.png',\n            userId: user.dataValues.id,\n          }).then(business => {\n\n      request\n        .delete('/v1/businesses/13')\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Business not found');\n          done();\n        });\n      });\n    });\n    });\n  });\n\n});\n"]}