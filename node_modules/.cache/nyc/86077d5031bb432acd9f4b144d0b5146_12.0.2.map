{"version":3,"sources":["businesses.js"],"names":["Object","defineProperty","exports","value","_multer","require","_multer2","_interopRequireDefault","_fileSystem","_fileSystem2","_models","_models2","obj","__esModule","default","_ref","Business","Review","upload","dest","fileSizeLimit","renameFile","tempPath","targetPath","rename","err","deleteFile","unlink","fileTypeHandleError","res","status","json","message","error","fileSizeHandleError","businessesController","single","create","req","filePath","file","path","Date","toISOString","originalname","mimetype","size","substring","length","body","businessName","description","email","phone","category","send","street","city","state","country","datefound","companyImage","userId","then","business","catch","update","findById","params","businessId","include","model","as","previousImage","businessForUpdate","destroy","retrieve","list","selectionType","query","location","findAll","where"],"mappings":"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","file":"businesses.js","sourceRoot":"/home/somto/Andela/We-Connect/lib/server/controllers","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _multer = require('multer');\n\nvar _multer2 = _interopRequireDefault(_multer);\n\nvar _fileSystem = require('file-system');\n\nvar _fileSystem2 = _interopRequireDefault(_fileSystem);\n\nvar _models = require('../models');\n\nvar _models2 = _interopRequireDefault(_models);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ref = [_models2.default.Business, _models2.default.Review],\n    Business = _ref[0],\n    Review = _ref[1];\n\n\nvar upload = (0, _multer2.default)({\n  dest: './businessesUploads/'\n});\n\nvar fileSizeLimit = 1024 * 1024 * 2;\n\n/**\n * rename file to an appropriate name\n * @param {String} tempPath The temporary path name.\n * @param {String} targetPath The target path name.\n * @returns {void} nothing.\n */\nvar renameFile = function renameFile(tempPath, targetPath) {\n  _fileSystem2.default.rename(tempPath, targetPath, function (err) {\n    if (err) throw err;\n  });\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nvar deleteFile = function deleteFile(targetPath) {\n  _fileSystem2.default.unlink(targetPath, function (err) {\n    if (err) throw err;\n  });\n};\n\n// file type handleError\nvar fileTypeHandleError = function fileTypeHandleError(res) {\n  res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n};\n\n// file size handleError\nvar fileSizeHandleError = function fileSizeHandleError(res) {\n  res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n};\n\nvar businessesController = {\n  // image upload\n  upload: upload.single('companyImage'),\n  // create a business\n  create: function create(req, res) {\n    var filePath = '';\n    if (req.file) {\n      var tempPath = './' + req.file.path;\n      var targetPath = './businessesUploads/' + (new Date().toISOString() + req.file.originalname);\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) {\n          renameFile(tempPath, targetPath);\n          // remove the dot in targetPath\n          filePath = targetPath.substring(1, targetPath.length);\n        } else {\n          deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else {\n        deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n    }\n    if (!req.body.businessName || !req.body.description || !req.body.email || !req.body.phone || !req.body.category) {\n      if (filePath) {\n        deleteFile('./' + filePath);\n      }\n      return res.status(206).send({ message: 'Incomplete fields' });\n    }\n    return Business.create({\n      businessName: req.body.businessName,\n      description: req.body.description,\n      street: req.body.street,\n      city: req.body.city,\n      state: req.body.state,\n      country: req.body.country,\n      datefound: req.body.datefound,\n      email: req.body.email,\n      phone: req.body.phone,\n      category: req.body.category,\n      companyImage: filePath,\n      userId: req.body.userId\n    }).then(function (business) {\n      return res.status(201).send(business);\n    }).catch(function (error) {\n      if (filePath) {\n        deleteFile('./' + filePath);\n      }\n      return res.status(400).send(error);\n    });\n  },\n\n  // update business\n  update: function update(req, res) {\n    var filePath = '';\n    if (req.file) {\n      var tempPath = './' + req.file.path;\n      var targetPath = './businessesUploads/' + (new Date().toISOString() + req.file.originalname);\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) {\n          renameFile(tempPath, targetPath);\n          // remove the dot in targetPath\n          filePath = targetPath.substring(1, targetPath.length);\n        } else {\n          deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else {\n        deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n    }\n\n    return Business.findById(req.params.businessId, {\n      include: [{ model: Review, as: 'reviews' }]\n    }).then(function (business) {\n      if (!business) {\n        // if file and url is not empty delete img for updation\n        if (filePath) {\n          deleteFile('./' + filePath);\n        }\n        return res.status(404).send({ message: 'Business not found' });\n      }\n      // holds the url of the image before update in other not to loose it\n      var previousImage = business.companyImage;\n\n      return business.update({\n        businessName: req.body.businessName || business.businessName,\n        description: req.body.description || business.description,\n        street: req.body.street || business.street,\n        city: req.body.city || business.city,\n        state: req.body.state || business.state,\n        country: req.body.country || business.country,\n        datefound: req.body.datefound || business.datefound,\n        email: req.body.email || business.email,\n        phone: req.body.phone || business.phone,\n        category: req.body.category || business.category,\n        companyImage: filePath || business.companyImage,\n        userId: req.body.userId || business.userId\n      }).then(function (businessForUpdate) {\n        // if file and url is not empty delete img for updation\n        if (filePath) {\n          if (previousImage) {\n            deleteFile('./' + previousImage);\n          }\n        }\n        return res.status(200).send(businessForUpdate);\n      }).catch(function (error) {\n        if (filePath) {\n          deleteFile('./' + filePath);\n        }\n        return res.status(400).send(error);\n      });\n    }).catch(function (error) {\n      return res.status(400).send(error);\n    });\n  },\n\n  // delete business\n  destroy: function destroy(req, res) {\n    return Business.findById(req.params.businessId).then(function (business) {\n      if (!business) {\n        return res.status(404).send({ message: 'Business not found' });\n      }\n      return business.destroy().then(function () {\n        if (business.companyImage) {\n          deleteFile('./' + business.companyImage);\n        }\n        return res.status(204).send();\n      }).catch(function (error) {\n        return res.status(400).send(error);\n      });\n    }).catch(function (error) {\n      return res.status(400).send(error);\n    });\n  },\n\n  // get a business\n  retrieve: function retrieve(req, res) {\n    return Business.findById(req.params.businessId, {\n      include: [{ model: Review, as: 'reviews' }]\n    }).then(function (business) {\n      if (!business) {\n        return res.status(404).send({ message: 'Business not found' });\n      }\n      return res.status(200).send(business);\n    }).catch(function (error) {\n      return res.status(400).send(error);\n    });\n  },\n\n  // get businesses\n  list: function list(req, res) {\n    var selectionType = void 0;\n    if (!req.query.location && !req.query.category) {\n      selectionType = Business.findAll({ include: [{ model: Review, as: 'reviews' }] });\n    }\n    if (req.query.location && !req.query.category) {\n      selectionType = Business.findAll({\n        where: { country: req.query.location },\n        include: [{ model: Review, as: 'reviews' }]\n      });\n    }\n    if (!req.query.location && req.query.category) {\n      selectionType = Business.findAll({\n        where: { category: req.query.category },\n        include: [{ model: Review, as: 'reviews' }]\n      });\n    }\n    if (req.query.location && req.query.category) {\n      selectionType = Business.findAll({\n        where: { country: req.query.location, category: req.query.category },\n        include: [{ model: Review, as: 'reviews' }]\n      });\n    }\n    return selectionType.then(function (business) {\n      if (business.length === 0) {\n        return res.status(404).send({ message: 'Businesses not found' });\n      }\n      return res.status(200).send(business);\n    }).catch(function (error) {\n      return res.status(400).send(error);\n    });\n  }\n};\n\nexports.default = businessesController;"]}