{"version":3,"sources":["users.js"],"names":["model","User","Business","upload","dest","fileSizeLimit","renameFile","tempPath","targetPath","fs","rename","err","deleteFile","unlink","fileTypeHandleError","res","status","json","message","error","fileSizeHandleError","fileFilterMethod","req","fileErrorArray","fileSizeError","fileTypeError","filePath","file","path","Date","toISOString","originalname","mimetype","size","substring","length","usersController","single","create","fileFilterValues","body","title","firstname","lastname","username","password","email","gender","dob","phone","send","hashedPassword","bcrypt","hashSync","street","city","state","country","userImage","then","token","jwt","sign","id","user","app","get","expiresIn","auth","catch","check","findOne","where","list","findAll","include","as","users","update","findById","params","userId","previousImage","userUpdate","destroy","retrieve"],"mappings":"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","file":"users.js","sourceRoot":"/home/somto/Andela/We-Connect/server/server/controllers","sourcesContent":["import multer from 'multer';\nimport fs from 'file-system';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\nimport model from '../models';\nimport app from '../../app';\n\nconst [User, Business] = [model.User, model.Business];\n\nconst upload = multer({\n  dest: './usersUploads/'\n});\n\nconst fileSizeLimit = 1024 * 1024 * 2;\n\n/**\n * rename file to an appropriate name\n * @param {String} tempPath The temporary path name.\n * @param {String} targetPath The target path name.\n * @returns {void} nothing.\n */\nconst renameFile = (tempPath, targetPath) => {\n  fs.rename(tempPath, targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n// file type handleError\nconst fileTypeHandleError = (res) => {\n  res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n};\n\n// file size handleError\nconst fileSizeHandleError = (res) => {\n  res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n};\n\n/* File filter handle method */\nconst fileFilterMethod = (req, res) => {\n  const fileErrorArray = [];\n  let fileSizeError = false;\n  let fileTypeError = false;\n  let filePath = '';\n\n  if (req.file) {\n    const tempPath = `./${req.file.path}`;\n    const targetPath = `./usersUploads/${new Date().toISOString() + req.file.originalname}`;\n    if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n      if (req.file.size <= fileSizeLimit) { renameFile(tempPath, targetPath);\n        // remove the dot in targetPath\n        filePath = targetPath.substring(1, targetPath.length);\n      } else { deleteFile(tempPath);\n        fileSizeError = true;\n      }\n    } else { deleteFile(tempPath);\n      fileTypeError = true;\n    }\n  }\n  fileErrorArray[0] = fileSizeError;\n  fileErrorArray[1] = fileTypeError;\n  fileErrorArray[2] = filePath;\n\n  return fileErrorArray;\n}\n\n\nconst usersController = {\n  upload: upload.single('userImage'), // image upload\n  // create a user\n  create(req, res) {\n\n    //implementing the file filter method\n    const fileFilterValues = fileFilterMethod(req, res);\n    const fileSizeError = fileFilterValues[0];\n    const fileTypeError = fileFilterValues[1];\n    const filePath = fileFilterValues[2];\n\n    if(fileSizeError) return fileSizeHandleError(res);\n    if(fileTypeError) return fileTypeHandleError(res);\n\n    // let filePath = '';\n    // if (req.file) {\n    //   const tempPath = `./${req.file.path}`;\n    //   const targetPath = `./usersUploads/${new Date().toISOString() + req.file.originalname}`;\n    //   if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n    //     if (req.file.size <= fileSizeLimit) {\n    //       renameFile(tempPath, targetPath);\n    //     } else {\n    //       deleteFile(tempPath);\n    //       return fileSizeHandleError(res);\n    //     }\n    //   } else {\n    //     deleteFile(tempPath);\n    //     return fileTypeHandleError(res);\n    //   }\n    //   // remove the dot in targetPath\n    //   filePath = targetPath.substring(1, targetPath.length);\n    // }\n\n    /* Required feilds */\n    if (!req.body.title || !req.body.firstname || !req.body.lastname ||\n      !req.body.username || !req.body.password || !req.body.email ||\n      !req.body.gender || !req.body.dob || !req.body.phone) {\n      if (filePath) { deleteFile(`./${filePath}`); }\n      return res.status(206).send({ message: 'Incomplete field' });\n    }\n\n    const hashedPassword = bcrypt.hashSync(req.body.password, 8);\n\n    return User\n      .create({\n        title: req.body.title, firstname: req.body.firstname, lastname: req.body.lastname,\n        username: req.body.username, password: hashedPassword, email: req.body.email,\n        gender: req.body.gender, street: req.body.street, city: req.body.city,\n        state: req.body.state, country: req.body.country, dob: req.body.dob,\n        phone: req.body.phone, userImage: filePath\n      })\n      .then(user => {\n          const token = jwt.sign({ id: user.id }, app.get('superSecret'),\n          { expiresIn: 86400 // expires in 24 hours\n          });\n        return res.status(201).send({user, auth: true, token: token})\n      })\n      .catch((error) => {\n        if (filePath) {\n          deleteFile(`./${filePath}`);\n        }\n        return res.status(400).send(error);\n      });\n\n  },\n  // login with username and password\n  check(req, res) {\n    return User\n      .findOne({ where: { username: req.body.username, password: req.body.password } })\n      .then((user) => {\n        if (!user) {\n          return res.status(404).send({ message: 'User not found' });\n        }\n        return res.status(200).send(user);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n  list(req, res) {\n    return User\n      .findAll({\n        include: [{\n          model: Business,\n          as: 'businesses',\n        }],\n      })\n      .then(users => res.status(200).send(users))\n      .catch(error => res.status(400).send(error));\n  },\n  // update user\n  update(req, res) {\n    let filePath = '';\n    if (req.file) {\n      const tempPath = `./${req.file.path}`;\n      const targetPath = `./usersUploads/${new Date().toISOString() + req.file.originalname}`;\n\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) {\n          renameFile(tempPath, targetPath);\n          // remove the dot in targetPath\n          filePath = targetPath.substring(1, targetPath.length);\n        } else {\n          deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else {\n        deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n    }\n\n    return User\n      .findById(req.params.userId, {\n        include: [{\n          model: Business,\n          as: 'businesses'\n        }]\n      })\n      .then((user) => {\n        if (!user) {\n          // if file and url is not empty delete img for updation\n          if (filePath) {\n            deleteFile(`./${filePath}`);\n          }\n          return res.status(404).send({ message: 'User not found' });\n        }\n        // holds the url of the image before update in other not to loose it\n        const previousImage = user.userImage;\n        return user\n          .update({\n            title: req.body.title || user.title, firstname: req.body.firstname || user.firstname,\n            lastname: req.body.lastname || user.lastname, username: req.body.username || user.username,\n            password: req.body.password || user.password, email: req.body.email || user.email,\n            gender: req.body.gender || user.gender, street: req.body.street || user.street,\n            city: req.body.city || user.city, state: req.body.state || user.state,\n            country: req.body.country || user.country, dob: req.body.dob || user.dob,\n            phone: req.body.phone || user.phone, userImage: filePath || user.userImage,\n          })\n          .then((userUpdate) => {\n            // if file and url is not empty delete img for updation\n            if (filePath) {\n              if (previousImage) {\n                deleteFile(`./${previousImage}`);\n              }\n            }\n            return res.status(200).send(userUpdate);\n          }) // Send back the updated user\n          .catch((error) => {\n            if (filePath) {\n              deleteFile(`./${filePath}`);\n            }\n            return res.status(400).send(error);\n          });\n      }).catch(error => res.status(400).send(error));\n  },\n  // delete user\n  destroy(req, res) {\n    return User\n      .findById(req.params.userId)\n      .then((user) => {\n        if (!user) {\n          return res.status(404).send({ message: 'User not found' });\n        }\n\n        return user\n          .destroy()\n          .then(() => {\n            if (user.userImage) {\n              deleteFile(`./${user.userImage}`);\n            }\n            return res.status(204).send();\n          })\n          .catch(error => res.status(400).send(error));\n      }).catch(error => res.status(400).send(error));\n  },\n  // get a user\n  retrieve(req, res) {\n    return User\n      .findById(req.params.userId, {\n        include: [{\n          model: Business,\n          as: 'businesses'\n        }]\n      })\n      .then((user) => {\n        if (!user) {\n          return res.status(404).send({ message: 'User not found' });\n        }\n        return res.status(200).send(user);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n};\n\nexport default usersController;\n"]}