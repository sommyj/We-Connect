{"version":3,"sources":["businesses.js"],"names":["model","Business","Review","upload","dest","fileSizeLimit","renameFile","tempPath","targetPath","fs","rename","err","deleteFile","unlink","fileTypeHandleError","res","status","json","message","error","fileSizeHandleError","authMethod","req","authMethodArray","noTokenProviderError","failedAuth","decodedID","token","body","query","headers","file","path","jwt","verify","app","get","decoded","id","businessesController","single","create","send","auth","console","log","filePath","Date","toISOString","originalname","mimetype","size","substring","length","businessName","description","email","phone","category","street","city","state","country","datefound","companyImage","userId","then","business","catch","update","authValues","findById","params","businessId","include","as","previousImage","businessForUpdate","destroy","authVerificationErrorIndicator","test","retrieve","list","selectionType","location","findAll","where"],"mappings":"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","file":"businesses.js","sourceRoot":"/home/somto/Andela/We-Connect/server/server/controllers","sourcesContent":["import multer from 'multer';\nimport fs from 'file-system';\nimport jwt from 'jsonwebtoken';\nimport model from '../models';\nimport app from '../../app';\n\nconst [Business, Review] = [model.Business, model.Review];\n\nconst upload = multer({\n  dest: './businessesUploads/'\n});\n\nconst fileSizeLimit = 1024 * 1024 * 2;\n\n/**\n * rename file to an appropriate name\n * @param {String} tempPath The temporary path name.\n * @param {String} targetPath The target path name.\n * @returns {void} nothing.\n */\nconst renameFile = (tempPath, targetPath) => {\n  fs.rename(tempPath, targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n// file type handleError\nconst fileTypeHandleError = (res) => {\n  res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n};\n\n// file size handleError\nconst fileSizeHandleError = (res) => {\n  res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n};\n\n// Authentication handling method\nconst authMethod = (req, res) => {\n  const authMethodArray = [];\n  let noTokenProviderError = false;\n  let failedAuth = false;\n  let decodedID;\n\n  // check header or url parameters or post parameters for token\n  const token = req.body.token || req.query.token || req.headers['x-access-token'];\n  if (!token) {\n    if (req.file) {\n    deleteFile(`./${req.file.path}`);\n  }\n    noTokenProviderError = true;\n  }\n\n  // verifies secret and checks exp\n  jwt.verify(token, app.get('superSecret'), function(err, decoded) {\n  if (err) failedAuth = true;\n  else  decodedID = decoded.id;\n  });\n\n  authMethodArray[0] = noTokenProviderError;\n  authMethodArray[1] = failedAuth;\n  authMethodArray[2] = decodedID;\n\n  return authMethodArray;\n};\n\nconst businessesController = {\n  // image upload\n  upload: upload.single('companyImage'),\n  // create a business\n  create(req, res) {\n    let decodedID;\n    // check header or url parameters or post parameters for token\n    const token = req.body.token || req.query.token || req.headers['x-access-token'];\n    if (!token) {\n      if (req.file) {\n      deleteFile(`./${req.file.path}`);\n      }\n      return res.status(401).send({ auth: false, message: 'No token provided.' });\n    }\n    console.log(app.get('superSecret'));\n    // verifies secret and checks exp\n    jwt.verify(token, app.get('superSecret'), function(err, decoded) {\n    if (err) return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n      decodedID = decoded.id;\n    });\n\n    let filePath = '';\n    if (req.file) {\n      const tempPath = `./${req.file.path}`;\n      const targetPath = `./businessesUploads/${new Date().toISOString() + req.file.originalname}`;\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) { renameFile(tempPath, targetPath);\n          // remove the dot in targetPath\n          filePath = targetPath.substring(1, targetPath.length);\n        } else { deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else { deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n    }\n    if (!req.body.businessName || !req.body.description ||\n      !req.body.email || !req.body.phone || !req.body.category) {\n      if (filePath) { deleteFile(`./${filePath}`); }\n      return res.status(206).send({ message: 'Incomplete fields' });\n    }\n\n    return Business\n      .create({\n        businessName: req.body.businessName,\n        description: req.body.description,\n        street: req.body.street,\n        city: req.body.city,\n        state: req.body.state,\n        country: req.body.country,\n        datefound: req.body.datefound,\n        email: req.body.email,\n        phone: req.body.phone,\n        category: req.body.category,\n        companyImage: filePath,\n        userId: decodedID,\n      })\n      .then(business => res.status(201).send(business))\n      .catch((error) => {\n        if (filePath) { deleteFile(`./${filePath}`); }\n        return res.status(400).send(error);\n      });\n  },\n  // update business\n  update(req, res) {\n\n    let decodedID;\n\n    const authValues = authMethod(req, res);\n\n    if(authValues[0]) return res.status(401).send({ auth: false, message: 'No token provided.' });\n\n    if(authValues[1]) return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n\n    if(authValues[2]) decodedID = authValues[2];\n\n    // let decodedID;\n    // // check header or url parameters or post parameters for token\n    // const token = req.body.token || req.query.token || req.headers['x-access-token'];\n    // if (!token) {\n    //   if (req.file) {\n    //   deleteFile(`./${req.file.path}`);\n    // }\n    //   return res.status(401).send({ auth: false, message: 'No token provided.' });\n    // }\n    //\n    // //intialize a boolean value to indicate an auth error\n    // let authVerificationErrorIndicator = false;\n    //\n    // // verifies secret and checks exp\n    // jwt.verify(token, app.get('superSecret'), function(err, decoded) {\n    // if (err) authVerificationErrorIndicator = true;\n    // else  decodedID = decoded.id;\n    // });\n    //\n    // //return auth verification error to avoid set res body before header\n    // if(authVerificationErrorIndicator)\n    // return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n\n    let filePath = '';\n    if (req.file) {\n      const tempPath = `./${req.file.path}`;\n      const targetPath = `./businessesUploads/${new Date().toISOString() + req.file.originalname}`;\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) {\n          renameFile(tempPath, targetPath);\n          // remove the dot in targetPath\n          filePath = targetPath.substring(1, targetPath.length);\n        } else { deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else { deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n    }\n\n    return Business\n      .findById(req.params.businessId, {\n        include: [{ model: Review, as: 'reviews' }]\n      })\n      .then((business) => {\n        if (!business) {\n          // if file and url is not empty delete img for updation\n          if (filePath) { deleteFile(`./${filePath}`); }\n          return res.status(404).send({ message: 'Business not found' });\n        }\n\n        if (decodedID !== business.userId)\n         return res.status(403).send({auth: false, message: 'User not allowed'});\n\n        // holds the url of the image before update in other not to loose it\n        const previousImage = business.companyImage;\n\n        return business\n          .update({\n            businessName: req.body.businessName || business.businessName,\n            description: req.body.description || business.description,\n            street: req.body.street || business.street,\n            city: req.body.city || business.city,\n            state: req.body.state || business.state,\n            country: req.body.country || business.country,\n            datefound: req.body.datefound || business.datefound,\n            email: req.body.email || business.email,\n            phone: req.body.phone || business.phone,\n            category: req.body.category || business.category,\n            companyImage: filePath || business.companyImage,\n            userId: business.userId,\n          }).then((businessForUpdate) => {\n            // if file and url is not empty delete img for updation\n            if (filePath) {\n              if (previousImage) {\n                deleteFile(`./${previousImage}`);\n              }\n            }\n            return res.status(200).send(businessForUpdate);\n          }).catch((error) => {\n            if (filePath) { deleteFile(`./${filePath}`); }\n            return res.status(400).send(error);\n          });\n      }).catch(error => res.status(400).send(error));\n  },\n  // delete business\n  destroy(req, res) {\n\n    let decodedID;\n    // check header or url parameters or post parameters for token\n    const token = req.body.token || req.query.token || req.headers['x-access-token'];\n    if (!token) {\n      if (req.file) {\n      deleteFile(`./${req.file.path}`);\n    }\n      return res.status(401).send({ auth: false, message: 'No token provided.' });\n    }\n\n    //intialize a boolean value to indicate an auth error\n    let authVerificationErrorIndicator = false;\n\n    // verifies secret and checks exp\n    jwt.verify(token, app.get('superSecret'), function(err, decoded) {\n    if (err) test = true;\n    else  decodedID = decoded.id;\n    });\n\n    //return auth verification error to avoid set res body before header\n    if(authVerificationErrorIndicator)\n    return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n\n\n    return Business\n      .findById(req.params.businessId)\n      .then((business) => {\n        if (!business) {\n          return res.status(404).send({ message: 'Business not found' });\n        }\n\n        if (decodedID !== business.userId)\n         return res.status(403).send({auth: false, message: 'User not allowed'});\n\n\n        // holds the url of the image before its is delete\n        const previousImage = business.companyImage;\n\n        return business\n          .destroy()\n          .then(() => {\n            if (business.companyImage) {\n              deleteFile(`./${business.companyImage}`);\n            }\n            return res.status(204).send();\n          }).catch(error => res.status(400).send(error));\n      }).catch(error => res.status(400).send(error));\n  },\n  // get a business\n  retrieve(req, res) {\n    return Business\n      .findById(req.params.businessId, {\n        include: [{ model: Review, as: 'reviews' }]\n      })\n      .then((business) => {\n        if (!business) {\n          return res.status(404).send({ message: 'Business not found' });\n        }\n        return res.status(200).send(business);\n      }).catch(error => res.status(400).send(error));\n  },\n  // get businesses\n  list(req, res) {\n    let selectionType;\n    if (!req.query.location && !req.query.category) {\n      selectionType = Business\n        .findAll({ include: [{ model: Review, as: 'reviews' }] });\n    }\n    if (req.query.location && !req.query.category) {\n      selectionType = Business\n        .findAll({\n          where: { country: req.query.location },\n          include: [{ model: Review, as: 'reviews' }]\n        });\n    }\n    if (!req.query.location && req.query.category) {\n      selectionType = Business\n        .findAll({\n          where: { category: req.query.category },\n          include: [{ model: Review, as: 'reviews' }]\n        });\n    }\n    if (req.query.location && req.query.category) {\n      selectionType = Business\n        .findAll({\n          where: { country: req.query.location, category: req.query.category },\n          include: [{ model: Review, as: 'reviews' }]\n        });\n    }\n    return selectionType\n      .then((business) => {\n        if (business.length === 0) {\n          return res.status(404).send({ message: 'Businesses not found' });\n        }\n        return res.status(200).send(business);\n      }).catch(error => res.status(400).send(error));\n  },\n};\n\nexport default businessesController;\n"]}