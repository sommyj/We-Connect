{"version":3,"sources":["users.js"],"names":["model","User","Business","upload","dest","fileSizeLimit","renameFile","tempPath","targetPath","fs","rename","err","deleteFile","unlink","fileTypeHandleError","res","status","json","message","error","fileSizeHandleError","usersController","single","create","req","filePath","file","path","Date","toISOString","originalname","mimetype","size","substring","length","body","title","firstname","lastname","username","password","email","gender","dob","phone","send","hashedPassword","bcrypt","hashSync","street","city","state","country","userImage","then","payload","id","user","token","jwt","sign","app","get","expiresIn","auth","catch","console","log","check","findOne","where","list","findAll","include","as","users","update","findById","params","userId","previousImage","userUpdate","destroy","retrieve"],"mappings":"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","file":"users.js","sourceRoot":"/home/somto/Andela/We-Connect/server/server/controllers","sourcesContent":["import multer from 'multer';\nimport fs from 'file-system';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\nimport model from '../models';\nimport app from '../../app';\n\nconst [User, Business] = [model.User, model.Business];\n\nconst upload = multer({\n  dest: './usersUploads/'\n});\n\nconst fileSizeLimit = 1024 * 1024 * 2;\n\n/**\n * rename file to an appropriate name\n * @param {String} tempPath The temporary path name.\n * @param {String} targetPath The target path name.\n * @returns {void} nothing.\n */\nconst renameFile = (tempPath, targetPath) => {\n  fs.rename(tempPath, targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\n// file type handleError\nconst fileTypeHandleError = (res) => {\n  res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n};\n\n// file size handleError\nconst fileSizeHandleError = (res) => {\n  res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n};\n\nconst usersController = {\n  // image upload\n  upload: upload.single('userImage'),\n  // create a user\n  create(req, res) {\n    let filePath = '';\n    if (req.file) {\n      const tempPath = `./${req.file.path}`;\n      const targetPath = `./usersUploads/${new Date().toISOString() + req.file.originalname}`;\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) {\n          renameFile(tempPath, targetPath);\n        } else {\n          deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else {\n        deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n      // remove the dot in targetPath\n      filePath = targetPath.substring(1, targetPath.length);\n    }\n\n    if (!req.body.title || !req.body.firstname || !req.body.lastname ||\n      !req.body.username || !req.body.password || !req.body.email ||\n      !req.body.gender || !req.body.dob || !req.body.phone) {\n      if (filePath) { deleteFile(`./${filePath}`); }\n      return res.status(206).send({ message: 'Incomplete field' });\n    }\n\n    const hashedPassword = bcrypt.hashSync(req.body.password, 8);\n\n    return User\n      .create({\n        title: req.body.title, firstname: req.body.firstname, lastname: req.body.lastname,\n        username: req.body.username, password: hashedPassword, email: req.body.email,\n        gender: req.body.gender, street: req.body.street, city: req.body.city,\n        state: req.body.state, country: req.body.country, dob: req.body.dob,\n        phone: req.body.phone, userImage: filePath\n      })\n      .then(user => {\n        const payload = { id: user.id };\n          const token = jwt.sign(payload, app.get('superSecret'),\n          { expiresIn: 86400 // expires in 24 hours\n          });\n        res.status(201).send({user, auth: true, token: token})})\n      .catch((error) => {\n        console.log(`-----------${app.get('superSecret')}---------------`);\n        if (filePath) {\n          deleteFile(`./${filePath}`);\n        }\n        return res.status(400).send(error);\n      });\n\n  },\n  // login with username and password\n  check(req, res) {\n    return User\n      .findOne({ where: { username: req.body.username, password: req.body.password } })\n      .then((user) => {\n        if (!user) {\n          return res.status(404).send({ message: 'User not found' });\n        }\n        return res.status(200).send(user);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n  list(req, res) {\n    return User\n      .findAll({\n        include: [{\n          model: Business,\n          as: 'businesses',\n        }],\n      })\n      .then(users => res.status(200).send(users))\n      .catch(error => res.status(400).send(error));\n  },\n  // update user\n  update(req, res) {\n    let filePath = '';\n    if (req.file) {\n      const tempPath = `./${req.file.path}`;\n      const targetPath = `./usersUploads/${new Date().toISOString() + req.file.originalname}`;\n\n      if (req.file.mimetype === 'image/jpeg' || req.file.mimetype === 'image/png') {\n        if (req.file.size <= fileSizeLimit) {\n          renameFile(tempPath, targetPath);\n          // remove the dot in targetPath\n          filePath = targetPath.substring(1, targetPath.length);\n        } else {\n          deleteFile(tempPath);\n          return fileSizeHandleError(res);\n        }\n      } else {\n        deleteFile(tempPath);\n        return fileTypeHandleError(res);\n      }\n    }\n\n    return User\n      .findById(req.params.userId, {\n        include: [{\n          model: Business,\n          as: 'businesses'\n        }]\n      })\n      .then((user) => {\n        if (!user) {\n          // if file and url is not empty delete img for updation\n          if (filePath) {\n            deleteFile(`./${filePath}`);\n          }\n          return res.status(404).send({ message: 'User not found' });\n        }\n        // holds the url of the image before update in other not to loose it\n        const previousImage = user.userImage;\n        return user\n          .update({\n            title: req.body.title || user.title, firstname: req.body.firstname || user.firstname,\n            lastname: req.body.lastname || user.lastname, username: req.body.username || user.username,\n            password: req.body.password || user.password, email: req.body.email || user.email,\n            gender: req.body.gender || user.gender, street: req.body.street || user.street,\n            city: req.body.city || user.city, state: req.body.state || user.state,\n            country: req.body.country || user.country, dob: req.body.dob || user.dob,\n            phone: req.body.phone || user.phone, userImage: filePath || user.userImage,\n          })\n          .then((userUpdate) => {\n            // if file and url is not empty delete img for updation\n            if (filePath) {\n              if (previousImage) {\n                deleteFile(`./${previousImage}`);\n              }\n            }\n            return res.status(200).send(userUpdate);\n          }) // Send back the updated user\n          .catch((error) => {\n            if (filePath) {\n              deleteFile(`./${filePath}`);\n            }\n            return res.status(400).send(error);\n          });\n      }).catch(error => res.status(400).send(error));\n  },\n  // delete user\n  destroy(req, res) {\n    return User\n      .findById(req.params.userId)\n      .then((user) => {\n        if (!user) {\n          return res.status(404).send({ message: 'User not found' });\n        }\n\n        return user\n          .destroy()\n          .then(() => {\n            if (user.userImage) {\n              deleteFile(`./${user.userImage}`);\n            }\n            return res.status(204).send();\n          })\n          .catch(error => res.status(400).send(error));\n      }).catch(error => res.status(400).send(error));\n  },\n  // get a user\n  retrieve(req, res) {\n    return User\n      .findById(req.params.userId, {\n        include: [{\n          model: Business,\n          as: 'businesses'\n        }]\n      })\n      .then((user) => {\n        if (!user) {\n          return res.status(404).send({ message: 'User not found' });\n        }\n        return res.status(200).send(user);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n};\n\nexport default usersController;\n"]}