{"version":3,"sources":["reviews-spec.js"],"names":["process","env","NODE_ENV","chai","should","request","app","User","model","Business","Review","describe","beforeEach","done","destroy","where","force","then","it","get","end","err","res","have","status","body","be","a","length","eql","create","title","firstname","lastname","username","password","email","gender","street","city","state","country","dob","phone","userImage","businessName","description","datefound","category","companyImage","userId","user","dataValues","id","response","businessId","business","property","deep","post","send"],"mappings":";;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AARA;AACAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuB,MAAvB;;AAEA;;;AAOAC,eAAKC,MAAL;AACA,IAAMC,UAAU,yBAAUC,aAAV,CAAhB;AACA,IAAMC,OAAOC,iBAAMD,IAAnB;AACA,IAAME,WAAWD,iBAAMC,QAAvB;AACA,IAAMC,SAASF,iBAAME,MAArB;;AAGAC,SAAS,SAAT,EAAoB,YAAM;AACxBC,aAAW,UAACC,IAAD,EAAU;AAAE;AACrBH,WAAOI,OAAP,CAAe,EAACC,OAAO,EAAR,EAAYC,OAAO,IAAnB,EAAf,EAAyCC,IAAzC,CAA8C;AAAA,aAAMJ,MAAN;AAAA,KAA9C;AACD,GAFD;;AAIAF,WAAS,aAAT,EAAwB,YAAM;AAC5BO,OAAG,6BAAH,EAAkC,UAACL,IAAD,EAAU;AAC1CR,cACGc,GADH,CACO,0BADP,EAEGC,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,YAAIlB,MAAJ,CAAWmB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,YAAIG,IAAJ,CAASrB,MAAT,CAAgBsB,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACAL,YAAIG,IAAJ,CAASG,MAAT,CAAgBxB,MAAhB,CAAuBsB,EAAvB,CAA0BG,GAA1B,CAA8B,CAA9B;AACAhB;AACD,OAPH;AAQD,KATD;AAUAK,OAAG,+BAAH,EAAoC,UAACL,IAAD,EAAU;;AAEtCN,WAAKuB,MAAL,CAAY;AACNC,eAAO,IADD;AAENC,mBAAW,OAFL;AAGNC,kBAAU,SAHJ;AAINC,kBAAU,QAJJ;AAKNC,kBAAU,KALJ;AAMNC,eAAO,kBAND;AAONC,gBAAQ,MAPF;AAQNC,gBAAQ,mBARF;AASNC,cAAM,QATA;AAUNC,eAAO,OAVD;AAWNC,iBAAS,SAXH;AAYNC,aAAK,YAZC;AAaNC,eAAO,WAbD;AAcNC,mBAAW;AAdL,OAAZ,EAgBK3B,IAhBL,CAgBU,gBAAQ;;AAEZR,iBAASqB,MAAT,CAAgB;AACde,wBAAc,OADA;AAEdC,uBAAa,6BAFC;AAGdR,kBAAQ,oBAHM;AAIdC,gBAAM,QAJQ;AAKdC,iBAAO,OALO;AAMdC,mBAAS,SANK;AAOdM,qBAAW,YAPG;AAQdX,iBAAO,cARO;AASdO,iBAAO,UATO;AAUdK,oBAAU,YAVI;AAWdC,wBAAc,EAXA;AAYdC,kBAAQC,KAAKC,UAAL,CAAgBC;AAZV,SAAhB,EAaGpC,IAbH,CAaQ,oBAAY;;AAElBP,iBAAOoB,MAAP,CAAc;AACZwB,sBAAU,MADE;AAEZJ,oBAAQC,KAAKC,UAAL,CAAgBC,EAFZ;AAGZE,wBAAYC,SAASJ,UAAT,CAAoBC;AAHpB,WAAd,EAIGpC,IAJH,CAIQ,kBAAU;;AAElBZ,oBACGc,GADH,qBACyBqC,SAASJ,UAAT,CAAoBC,EAD7C,eAEGjC,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,kBAAIlB,MAAJ,CAAWmB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,kBAAIG,IAAJ,CAASrB,MAAT,CAAgBsB,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACAL,kBAAIG,IAAJ,CAASrB,MAAT,CAAgBmB,IAAhB,CAAqBkC,QAArB,CAA8B,GAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA5C;AACD,aAbH;AAcC,WApBD;AAqBD,SApCD;AAqCD,OAvDL;AAwDP,KA1DD;;AA6DAK,OAAG,wDAAH,EAA6D,UAACL,IAAD,EAAU;;AAErEN,WAAKuB,MAAL,CAAY;AACNC,eAAO,IADD;AAENC,mBAAW,OAFL;AAGNC,kBAAU,SAHJ;AAINC,kBAAU,OAJJ;AAKNC,kBAAU,KALJ;AAMNC,eAAO,iBAND;AAONC,gBAAQ,MAPF;AAQNC,gBAAQ,mBARF;AASNC,cAAM,QATA;AAUNC,eAAO,OAVD;AAWNC,iBAAS,SAXH;AAYNC,aAAK,YAZC;AAaNC,eAAO,UAbD;AAcNC,mBAAW;AAdL,OAAZ,EAgBK3B,IAhBL,CAgBU,gBAAQ;;AAEZR,iBAASqB,MAAT,CAAgB;AACde,wBAAc,QADA;AAEdC,uBAAa,6BAFC;AAGdR,kBAAQ,oBAHM;AAIdC,gBAAM,QAJQ;AAKdC,iBAAO,OALO;AAMdC,mBAAS,SANK;AAOdM,qBAAW,YAPG;AAQdX,iBAAO,eARO;AASdO,iBAAO,WATO;AAUdK,oBAAU,YAVI;AAWdC,wBAAc,EAXA;AAYdC,kBAAQC,KAAKC,UAAL,CAAgBC;AAZV,SAAhB,EAaGpC,IAbH,CAaQ,oBAAY;;AAGlBP,iBAAOoB,MAAP,CAAc;AACZwB,sBAAU,GADE;AAEZJ,oBAAQC,KAAKC,UAAL,CAAgBC,EAFZ;AAGZE,wBAAYC,SAASJ,UAAT,CAAoBC;AAHpB,WAAd;;AAMAhD,kBACGc,GADH,CACO,0BADP,EAEGC,GAFH,CAEO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,gBAAIlB,MAAJ,CAAWmB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,gBAAIG,IAAJ,CAASrB,MAAT,CAAgBsB,EAAhB,CAAmBC,CAAnB,CAAqB,OAArB;AACAL,gBAAIG,IAAJ,CAASG,MAAT,CAAgBxB,MAAhB,CAAuBsB,EAAvB,CAA0BG,GAA1B,CAA8B,CAA9B;AACAP,gBAAIG,IAAJ,CAASrB,MAAT,CAAgBmB,IAAhB,CAAqBmC,IAArB,CAA0BD,QAA1B,CAAmC,GAAnC,EAAwCA,QAAxC,CAAiD,UAAjD,EAA6D5B,GAA7D,CAAiE,CAAjE;AACAP,gBAAIG,IAAJ,CAASrB,MAAT,CAAgBmB,IAAhB,CAAqBmC,IAArB,CAA0BD,QAA1B,CAAmC,GAAnC,EAAwCA,QAAxC,CAAiD,QAAjD,EAA2D5B,GAA3D,CAA+DsB,KAAKC,UAAL,CAAgBC,EAA/E;AACA/B,gBAAIG,IAAJ,CAASrB,MAAT,CAAgBmB,IAAhB,CAAqBmC,IAArB,CAA0BD,QAA1B,CAAmC,GAAnC,EAAwCA,QAAxC,CAAiD,YAAjD,EAA+D5B,GAA/D,CAAmE2B,SAASJ,UAAT,CAAoBC,EAAvF;AACAxC;AACD,WAVH;AAWC,SAjCH;AAkCC,OApDP;AAqDK,KAvDP;AAwDG,GAhIL;;AAkIAF,WAAS,cAAT,EAAyB,YAAM;AAC7BO,OAAG,gDAAH,EAAqD,UAACL,IAAD,EAAU;AAC7DN,WAAKuB,MAAL,CAAY;AACNC,eAAO,IADD;AAENC,mBAAW,OAFL;AAGNC,kBAAU,SAHJ;AAINC,kBAAU,MAJJ;AAKNC,kBAAU,UALJ;AAMNC,eAAO,gBAND;AAONC,gBAAQ,MAPF;AAQNC,gBAAQ,mBARF;AASNC,cAAM,QATA;AAUNC,eAAO,OAVD;AAWNC,iBAAS,SAXH;AAYNC,aAAK,YAZC;AAaNC,eAAO,UAbD;AAcNC,mBAAW;AAdL,OAAZ,EAgBK3B,IAhBL,CAgBU,gBAAQ;;AAEZR,iBAASqB,MAAT,CAAgB;AACde,wBAAc,cADA;AAEdC,uBAAa,6BAFC;AAGdR,kBAAQ,oBAHM;AAIdC,gBAAM,QAJQ;AAKdC,iBAAO,OALO;AAMdC,mBAAS,SANK;AAOdM,qBAAW,YAPG;AAQdX,iBAAO,eARO;AASdO,iBAAO,WATO;AAUdK,oBAAU,YAVI;AAWdC,wBAAc,EAXA;AAYdC,kBAAQC,KAAKC,UAAL,CAAgBC;AAZV,SAAhB,EAaGpC,IAbH,CAaQ,oBAAY;;AAEpBZ,kBACGsD,IADH,qBAC0BH,SAASJ,UAAT,CAAoBC,EAD9C,eAEGO,IAFH,CAEQ;AACJN,sBAAU,EADN;AAEJJ,yBAAWC,KAAKC,UAAL,CAAgBC,EAFvB;AAGJE,6BAAeC,SAASJ,UAAT,CAAoBC;AAH/B,WAFR,EAOGjC,GAPH,CAOO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,gBAAIlB,MAAJ,CAAWmB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,gBAAIG,IAAJ,CAASrB,MAAT,CAAgBsB,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAL,gBAAIG,IAAJ,CAASrB,MAAT,CAAgBmB,IAAhB,CAAqBkC,QAArB,CAA8B,SAA9B,EAAyC5B,GAAzC,CAA6C,kBAA7C;AACAhB;AACD,WAZH;AAaC,SA5BD;AA6BD,OA/CL;AAgDD,KAjDD;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA5ED;AA6ED,CApND","file":"reviews-spec.js","sourceRoot":"/home/somto/Andela/We-Connect/server/test","sourcesContent":["//During the test the env variable is set to test\nprocess.env.NODE_ENV = 'test';\n\n// Require the dev-dependencies\nimport chai from 'chai';\nimport supertest from 'supertest';\n\nimport model from '../server/models';\nimport app from '../app';\n\nchai.should();\nconst request = supertest(app);\nconst User = model.User;\nconst Business = model.Business;\nconst Review = model.Review;\n\n\ndescribe('Reviews', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    Review.destroy({where: {}, force: true}).then(() => done());\n  });\n\n  describe('/GET review', () => {\n    it('it should GET empty reviews', (done) => {\n      request\n        .get('/v1/businesses/1/reviews')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('array');\n          res.body.length.should.be.eql(0);\n          done();\n        });\n    });\n    it('it should GET all the reviews', (done) => {\n\n            User.create({\n                  title: 'mr',\n                  firstname: 'somto',\n                  lastname: 'Ikwuoma',\n                  username: 'sommy1',\n                  password: '123',\n                  email: 'somto1@gmail.com',\n                  gender: 'male',\n                  street: 'ljan terrasse 346',\n                  city: 'ikotun',\n                  state: 'lagos',\n                  country: 'Nigeria',\n                  dob: '2015-11-04',\n                  phone: '166976498',\n                  userImage: 'usersUploads/testFile.png'\n                })\n                .then(user => {\n\n                  Business.create({\n                    businessName: 'Sommy',\n                    description: 'We produce quality products',\n                    street: '4 jvjvkjvj, kfkjfj',\n                    city: 'Sinner',\n                    state: 'Lagos',\n                    country: 'Nigeria',\n                    datefound: '2015-11-04',\n                    email: 'wecon@bfbf.b',\n                    phone: '34165448',\n                    category: 'Production',\n                    companyImage: '',\n                    userId: user.dataValues.id,\n                  }).then(business => {\n\n                    Review.create({\n                      response: 'come',\n                      userId: user.dataValues.id,\n                      businessId: business.dataValues.id,\n                    }).then(review => {\n\n                    request\n                      .get(`/v1/businesses/${business.dataValues.id}/reviews`)\n                      .end((err, res) => {\n                        res.should.have.status(200);\n                        res.body.should.be.a('array');\n                        res.body.should.have.property('0');\n                        // res.body.should.have.deep.property(0, review[0]).property('id').eql(1);\n                        // res.body.should.have.deep.property(0, review[0]).property('userId').eql('3');\n                        // res.body.should.have.deep.property(0, review[0]).property('businessId').eql('2');\n                        // res.body.should.have.deep.property(1, review[1]).property('id').eql(7);\n                        // res.body.should.have.deep.property(1, review[1]).property('userId').eql('8');\n                        // res.body.should.have.deep.property(1, review[1]).property('businessId').eql('2');\n                        done();\n                      });\n                    });\n                  });\n                });\n    });\n\n\n    it('it should GET empty reviews if reviews does not exists', (done) => {\n\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'sommy',\n            password: '123',\n            email: 'somto@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '66976498',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n            Business.create({\n              businessName: 'Sommy1',\n              description: 'We produce quality products',\n              street: '4 jvjvkjvj, kfkjfj',\n              city: 'Sinner',\n              state: 'Lagos',\n              country: 'Nigeria',\n              datefound: '2015-11-04',\n              email: 'wecon1@bfbf.b',\n              phone: '134165448',\n              category: 'Production',\n              companyImage: '',\n              userId: user.dataValues.id,\n            }).then(business => {\n\n\n              Review.create({\n                response: '1',\n                userId: user.dataValues.id,\n                businessId: business.dataValues.id,\n              })\n\n              request\n                .get('/v1/businesses/1/reviews')\n                .end((err, res) => {\n                  res.should.have.status(200);\n                  res.body.should.be.a('array');\n                  res.body.length.should.be.eql(0);\n                  res.body.should.have.deep.property('0').property('response').eql(1);\n                  res.body.should.have.deep.property('0').property('userId').eql(user.dataValues.id);\n                  res.body.should.have.deep.property('0').property('businessId').eql(business.dataValues.id);\n                  done();\n                });\n              });\n            });\n          });\n      });\n\n  describe('/POST review', () => {\n    it('it should not POST a review without a response', (done) => {\n      User.create({\n            title: 'mr',\n            firstname: 'somto',\n            lastname: 'Ikwuoma',\n            username: 'zuma',\n            password: 'zumarock',\n            email: 'rock@gmail.com',\n            gender: 'male',\n            street: 'ljan terrasse 346',\n            city: 'ikotun',\n            state: 'lagos',\n            country: 'Nigeria',\n            dob: '2015-11-04',\n            phone: '00110011',\n            userImage: 'usersUploads/testFile.png'\n          })\n          .then(user => {\n\n            Business.create({\n              businessName: 'Rocky nation',\n              description: 'We produce quality products',\n              street: '4 jvjvkjvj, kfkjfj',\n              city: 'Sinner',\n              state: 'Lagos',\n              country: 'Nigeria',\n              datefound: '2015-11-04',\n              email: 'bigups@bfbf.b',\n              phone: '111198728',\n              category: 'Production',\n              companyImage: '',\n              userId: user.dataValues.id,\n            }).then(business => {\n\n            request\n              .post(`/v1/businesses/${business.dataValues.id}/reviews`)\n              .send({\n                response: '',\n                userId: `${user.dataValues.id}`,\n                businessId: `${business.dataValues.id}`\n              })\n              .end((err, res) => {\n                res.should.have.status(206);\n                res.body.should.be.a('object');\n                res.body.should.have.property('message').eql('Incomplete field');\n                done();\n              });\n            });\n          });\n    });\n\n    // it('it should post a review', (done) => {\n    //   const review = {\n    //     id: 1,\n    //     response: 'very good.',\n    //     userId: '3',\n    //     businessId: '2',\n    //   };\n    //\n    //   chai.request(app)\n    //     .post('/v1/businesses/2/reviews')\n    //     .send(review)\n    //     .end((err, res) => {\n    //       res.should.have.status(201);\n    //       res.body.should.be.a('object');\n    //       res.body.should.have.property('Reviews');\n    //       res.body.Reviews.should.have.property('id').eql(1);\n    //       res.body.Reviews.should.have.property('response').eql('very good.');\n    //       res.body.Reviews.should.have.property('userId').eql('3');\n    //       res.body.Reviews.should.have.property('businessId').eql('2');\n    //       res.body.should.have.property('message').eql('Success');\n    //       res.body.should.have.property('error').eql(false);\n    //       done();\n    //     });\n    // });\n  });\n});\n"]}