{"version":3,"sources":["users-spec.js"],"names":["process","env","NODE_ENV","chai","should","use","chaiHttp","request","app","model","User","copyFile","src","dest","readStream","fs","createReadStream","pipe","createWriteStream","deleteFile","targetPath","unlink","err","describe","beforeEach","done","destroy","where","force","then","it","get","end","res","have","status","body","be","a","length","eql","post","field","attach","property","id","password","userImage","path","resolve","create","title","firstname","lastname","username","email","gender","street","city","state","country","dob","phone","send","message","user","deep","dataValues","Date","put","filename","join","destDir","access","mkdirSync","delete"],"mappings":"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","file":"users-spec.js","sourceRoot":"/home/somto/Andela/We-Connect/server/test","sourcesContent":["// During the test the env variable is set to test\n// Require the dev-dependencies\nimport chai from 'chai';\nimport supertest from 'supertest';\nimport fs from 'file-system';\nimport path from 'path';\nimport chaiHttp from 'chai-http';\n\nimport app from '../app';\nimport model from '../server/models';\n\nprocess.env.NODE_ENV = 'test';\n\nchai.should();\nchai.use(chaiHttp);\nconst request = supertest(app);\nconst [User] = [model.User];\n\n/**\n * copy file from a directory to another\n * @param {String} src The source you are copying from.\n * @param {String} dest The destination you are copying to.\n * @returns {void} nothing.\n */\nconst copyFile = (src, dest) => {\n  const readStream = fs.createReadStream(src);\n\n  readStream.pipe(fs.createWriteStream(dest));\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\ndescribe('Users', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  describe('/GET user', () => {\n    it('it should GET all the users', (done) => {\n      request\n        .get('/api/v1/users')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('array');\n          res.body.length.should.be.eql(0);\n          done();\n        });\n    });\n  });\n\n  describe('/POST user', () => {\n    it(`it should not CREATE a user without firstname, lastname, username, password,\n     email, gender, street, city, state, dob, phone`, (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', '')\n        .field('lastname', '')\n        .field('username', '')\n        .field('password', '')\n        .field('email', '')\n        .field('gender', '')\n        .field('street', '')\n        .field('city', '')\n        .field('state', '')\n        .field('dob', '')\n        .field('phone', '')\n        .attach('userImage', './testFile.png')\n        .end((err, res) => {\n          res.should.have.status(206);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Incomplete field');\n          done();\n        });\n    });\n\n    it('it should CREATE a user', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('street', 'ljan terrasse 346')\n        .field('city', 'ikotun')\n        .field('state', 'lagos')\n        .field('country', 'Nigeria')\n        .field('dob', '2015-11-04')\n        .field('phone', '66976498')\n        .attach('userImage', './testFile.png')\n\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.be.a('object');\n          res.body.should.have.property('id').eql(res.body.id);\n          res.body.should.have.property('firstname').eql('Justin');\n          res.body.should.have.property('lastname').eql('Ikwuoma');\n          res.body.should.have.property('username').eql('justman');\n          res.body.should.have.property('email').eql('justin@gmail.com');\n          res.body.should.have.property('password').eql(res.body.password);\n          res.body.should.have.property('gender').eql('male');\n          res.body.should.have.property('street').eql('ljan terrasse 346');\n          res.body.should.have.property('city').eql('ikotun');\n          res.body.should.have.property('userImage').eql(res.body.userImage);\n\n          // delete test image file\n          if (path.resolve('./testFile.png')) {\n            deleteFile(`./${res.body.userImage}`);\n          }\n\n          done();\n        });\n    });\n\n    it('it should CREATE a user without image', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('id', '1')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman1')\n        .field('password', 'abc')\n        .field('email', 'justin1@gmail.com')\n        .field('gender', 'male')\n        .field('street', 'ljan terrasse 346')\n        .field('city', 'ikotun')\n        .field('state', 'lagos')\n        .field('country', 'Nigeria')\n        .field('dob', '2015-11-04')\n        .field('phone', '669796498')\n        .attach('userImage', '')\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.be.a('object');\n          res.body.should.have.property('id').eql(res.body.id);\n          res.body.should.have.property('firstname').eql('Justin');\n          res.body.should.have.property('lastname').eql('Ikwuoma');\n          res.body.should.have.property('username').eql('justman1');\n          res.body.should.have.property('email').eql('justin1@gmail.com');\n          res.body.should.have.property('password').eql(res.body.password);\n          res.body.should.have.property('gender').eql('male');\n          res.body.should.have.property('street').eql('ljan terrasse 346');\n          res.body.should.have.property('city').eql('ikotun');\n          res.body.should.have.property('country').eql('Nigeria');\n          res.body.should.have.property('userImage').eql('');\n\n          done();\n        });\n    });\n\n\n    it('it should not CREATE a user when image file type not jpg/png', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman2')\n        .field('password', 'abc')\n        .field('email', 'justin2@gmail.com')\n        .field('gender', 'male')\n        .field('street', 'ljan terrasse 346')\n        .field('city', 'ikotun')\n        .field('state', 'lagos')\n        .field('country', 'Nigeria')\n        .field('dob', '2015-11-04')\n        .field('phone', '166976498')\n        .attach('userImage', './testFileType.txt')\n        .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n          res.body.should.have.property('error').eql(true);\n          done();\n        });\n    });\n\n    it(`it should not CREATE a user\n      when image file size is larger than 2mb`, (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman3')\n        .field('password', 'abc')\n        .field('email', 'justin3@gmail.com')\n        .field('gender', 'male')\n        .field('street', 'ljan terrasse 346')\n        .field('city', 'ikotun')\n        .field('state', 'lagos')\n        .field('country', 'Nigeria')\n        .field('dob', '2015-11-04')\n        .field('phone', '366976498')\n        .attach('userImage', './testFileSize.jpg')\n        .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message')\n            .eql('file should not be more than 2mb!');\n          res.body.should.have.property('error').eql(true);\n          done();\n        });\n    });\n\n    it('it should not get a particular user if POST a wrong username && password', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '566976498',\n        userImage: ''\n      });\n\n      request\n        .post('/auth/v1/login')\n        .send({ username: 'just', password: 'abc' })\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.message.should.be.eql('User not found');\n          done();\n        });\n    });\n\n    it('it should POST username && password and get the particular user ', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman4',\n        password: 'abc',\n        email: 'justin4@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '4466976498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/login')\n          .send({ username: 'justman4', password: 'abc' })\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('object');\n            res.body.should.have.property('id');\n            res.body.should.have.property('firstname').eql('Justin');\n            res.body.should.have.property('lastname').eql('Ikwuoma');\n            res.body.should.have.property('username').eql('justman4');\n            res.body.should.have.property('email').eql('justin4@gmail.com');\n            res.body.should.have.property('password').eql(res.body.password);\n            res.body.should.have.property('userImage').eql('');\n            done();\n          });\n      });\n    });\n\n    it('it should not CREATE a user if username, email, phone already exist', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman4',\n        password: 'abc',\n        email: 'justin4@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '4466976498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/signup')\n          .field('id', '1')\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman4')\n          .field('password', 'abc')\n          .field('email', 'justin1@gmail.com')\n          .field('gender', 'male')\n          .field('street', 'ljan terrasse 346')\n          .field('city', 'ikotun')\n          .field('state', 'lagos')\n          .field('country', 'Nigeria')\n          .field('dob', '2015-11-04')\n          .field('phone', '669796498')\n          .attach('userImage', '')\n          .end((err, res) => {\n            res.should.have.status(400);\n            res.body.should.be.a('object');\n            res.body.should.have.property('errors');\n            res.body.should.have.property('name').eql('SequelizeUniqueConstraintError');\n            done();\n          });\n      });\n    });\n  });\n\n  /*\n  * Test the /GET/ route\n  */\n  describe('/GET/ user', () => {\n    it('it should GET all users', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Somto',\n        lastname: 'Ikwuoma',\n        username: 'sommy',\n        password: '123',\n        email: 'somto@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'Ikotun',\n        state: 'Lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '66976498',\n        userImage: ''\n      }).then((user) => {\n        request\n          .get('/api/v1/users')\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('array');\n            res.body.should.have.property('0');\n            res.body.should.have.deep.property('0').property('id').eql(user.dataValues.id);\n            res.body.should.have.deep.property('0').property('firstname').eql('Somto');\n            res.body.should.have.deep.property('0').property('lastname').eql('Ikwuoma');\n            res.body.should.have.deep.property('0').property('username').eql('sommy');\n            res.body.should.have.deep.property('0').property('password').eql(res.body.password);\n            res.body.should.have.deep.property('0').property('gender').eql('male');\n            res.body.should.have.deep.property('0').property('email').eql('somto@gmail.com');\n            res.body.should.have.deep.property('0').property('state').eql('Lagos');\n            res.body.should.have.deep.property('0').property('country').eql('Nigeria');\n            done();\n          });\n      });\n    });\n\n    it('it should GET a user by the given id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommy1',\n        password: '123',\n        email: 'somto1@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '669764981',\n        userImage: 'usersUploads/testFile.png'\n      })\n        .then((user) => {\n          request\n            .get(`/api/v1/users/${user.dataValues.id}`)\n            .end((err, res) => {\n              res.should.have.status(200);\n              res.body.should.be.a('object');\n              res.body.should.have.property('firstname').eql('somto');\n              res.body.should.have.property('lastname').eql('Ikwuoma');\n              res.body.should.have.property('username').eql('sommy1');\n              res.body.should.have.property('email').eql('somto1@gmail.com');\n              res.body.should.have.property('password').eql(res.body.password);\n              res.body.should.have.property('userImage').eql('usersUploads/testFile.png');\n\n              done();\n            });\n        });\n    });\n\n\n    it('it should not GET a user by the given wrong id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommy2',\n        password: '123',\n        email: 'somto2@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '669764982',\n        userImage: 'usersUploads/testFile.png'\n      });\n\n      request\n        .get('/api/v1/users/14')\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.message.should.be.eql('User not found');\n          done();\n        });\n    });\n  });\n\n  /*\n   * Test the /PUT/:id route\n   */\n  describe('/PUT/:id user', () => {\n    it('it should UPDATE a user given the id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommy3',\n        password: '123',\n        email: 'somto3@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '669764983',\n        userImage: ''\n      }).then((user) => {\n        request\n          .put(`/api/v1/users/${user.dataValues.id}`)\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'sojust')\n          .field('password', 'abcd')\n          .field('email', 'justin@gmail.com')\n          .field('gender', 'male')\n          .field('street', 'ljan terrasse 346')\n          .field('city', 'ikotun')\n          .field('state', 'lagos')\n          .field('dob', '2015-11-04')\n          .field('phone', '669764984')\n          .attach('userImage', './testFile.png')\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('object');\n            res.body.should.have.property('title').eql('mr');\n            res.body.should.have.property('firstname').eql('Justin');\n            res.body.should.have.property('lastname').eql('Ikwuoma');\n            res.body.should.have.property('password').eql(res.body.password);\n            res.body.should.have.property('username').eql('sojust');\n            res.body.should.have.property('email').eql('justin@gmail.com');\n            res.body.should.have.property('userImage').eql(res.body.userImage);\n\n            // delete test image file\n            if (path.resolve('./testFile.png')) {\n              deleteFile(`./${res.body.userImage}`);\n            }\n\n            done();\n          });\n      });\n    });\n\n    it('it should not UPDATE a user given the wrong id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommy5',\n        password: '123',\n        email: 'somto5@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '669764985',\n        userImage: ''\n      });\n\n\n      request\n        .put('/api/v1/users/14')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'sojust')\n        .field('password', 'abcd')\n        .field('email', 'sojust@gmail.com')\n        .field('gender', 'male')\n        .field('street', 'ljan terrasse 346')\n        .field('city', 'ikotun')\n        .field('state', 'lagos')\n        .field('country', 'Nigeria')\n        .field('dob', '2015-11-04')\n        .field('phone', '66976498')\n        .attach('userImage', './testFile.png')\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('User not found');\n          done();\n        });\n    });\n\n    it(`it should UPDATE a user given the id and\n      maintain already existing fields and file if none is entered`, (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommy',\n        password: '123',\n        email: 'somto@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '66976498',\n        userImage: 'usersUploads/2018-07-23T16:04:36.226Zpassport.resized.JPG'\n      }).then((user) => {\n        request\n          .put(`/api/v1/users/${user.dataValues.id}`)\n          .field('title', '')\n          .field('firstname', '')\n          .field('lastname', '')\n          .field('username', '')\n          .field('password', '')\n          .field('email', '')\n          .field('gender', '')\n          .field('street', '')\n          .field('city', '')\n          .field('state', '')\n          .field('country', '')\n          .field('dob', '')\n          .field('phone', '')\n          .attach('userImage', '')\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('object');\n            res.body.should.have.property('title').eql('mr');\n            res.body.should.have.property('firstname').eql('somto');\n            res.body.should.have.property('lastname').eql('Ikwuoma');\n            res.body.should.have.property('password').eql(res.body.password);\n            res.body.should.have.property('username').eql('sommy');\n            res.body.should.have.property('email').eql('somto@gmail.com');\n            res.body.should.have.property('userImage').eql('usersUploads/2018-07-23T16:04:36.226Zpassport.resized.JPG');\n            done();\n          });\n      });\n    });\n\n    it('it should UPDATE a user given the id and replace already existing file', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommmy',\n        password: '123',\n        email: 'sommto@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '66976490',\n        userImage: 'usersUploads/testFile.png'\n      }).then((user) => {\n        const filename = 'testFile.png';\n        const src = path.join('./', filename);\n        const destDir = path.join('./', 'usersUploads');\n\n        fs.access(destDir, (err) => {\n          if (err) { fs.mkdirSync(destDir); }\n\n          copyFile(src, path.join(destDir, filename));\n        });\n\n        request\n          .put(`/api/v1/users/${user.dataValues.id}`)\n          .field('id', '1')\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'sojust')\n          .field('password', 'abcd')\n          .field('email', 'justin@gmail.com')\n          .field('gender', 'male')\n          .field('street', 'ljan terrasse 346')\n          .field('city', 'ikotun')\n          .field('state', 'lagos')\n          .field('dob', '2015-11-04')\n          .field('phone', '66976498')\n          .attach('userImage', './testFile.png')\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('object');\n            res.body.should.have.property('title').eql('mr');\n            res.body.should.have.property('firstname').eql('Justin');\n            res.body.should.have.property('lastname').eql('Ikwuoma');\n            res.body.should.have.property('password').eql(res.body.password);\n            res.body.should.have.property('username').eql('sojust');\n            res.body.should.have.property('email').eql('justin@gmail.com');\n            res.body.should.have.property('userImage').eql(res.body.userImage);\n\n            // delete test image file\n            if (path.resolve('./testFile.png')) {\n              deleteFile(`./${res.body.userImage}`);\n            }\n\n            done();\n          });\n      });\n    });\n\n    it('it should not UPDATE a user given the id when image file type not jpg/png', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommmmy',\n        password: '123',\n        email: 'sommmto@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '066976498',\n        userImage: ''\n      }).then((user) => {\n        request\n          .put(`/api/v1/users/${user.dataValues.id}`)\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman0')\n          .field('password', 'abc')\n          .field('email', 'justin0@gmail.com')\n          .field('gender', 'male')\n          .field('street', 'ljan terrasse 346')\n          .field('city', 'ikotun')\n          .field('state', 'lagos')\n          .field('dob', '2015-11-04')\n          .field('phone', '669764988')\n          .attach('userImage', './testFileType.txt')\n          .end((err, res) => {\n            res.should.have.status(403);\n            res.body.should.be.a('object');\n            res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n            res.body.should.have.property('error').eql(true);\n            done();\n          });\n      });\n    });\n\n    it(`it should not UPDATE a user given the id\n      when image file size is larger than 2mb`, (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommyy',\n        password: '123',\n        email: 'somtto@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '0066976498',\n        userImage: ''\n      })\n        .then((user) => {\n          request\n            .put(`/api/v1/users/${user.dataValues.id}`)\n            .field('title', 'mr')\n            .field('firstname', 'Justin')\n            .field('lastname', 'Ikwuoma')\n            .field('username', 'justman')\n            .field('password', 'abc')\n            .field('email', 'justin@gmail.com')\n            .field('gender', 'male')\n            .field('street', 'ljan terrasse 346')\n            .field('city', 'ikotun')\n            .field('state', 'lagos')\n            .field('dob', '2015-11-04')\n            .field('phone', '366976498')\n            .attach('userImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message')\n                .eql('file should not be more than 2mb!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n        });\n    });\n\n    it('it should not UPDATE a user if username, email, phone already exist', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman4',\n        password: 'abc',\n        email: 'justin4@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '4466976498',\n        userImage: ''\n      });\n\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman1',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '5466976498',\n        userImage: ''\n      }).then((user) => {\n        request\n          .put(`/api/v1/users/${user.dataValues.id}`)\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman4')\n          .field('password', 'abc')\n          .field('email', 'justin4@gmail.com')\n          .field('gender', 'male')\n          .field('street', 'ljan terrasse 346')\n          .field('city', 'ikotun')\n          .field('state', 'lagos')\n          .field('country', 'Nigeria')\n          .field('dob', '2015-11-04')\n          .field('phone', '4466976498')\n          .attach('userImage', '')\n          .end((err, res) => {\n            res.should.have.status(400);\n            res.body.should.be.a('object');\n            res.body.should.have.property('errors');\n            res.body.should.have.property('name').eql('SequelizeUniqueConstraintError');\n            done();\n          });\n      });\n    });\n  });\n\n  /*\n  * Test the /DELETE/:id route\n  */\n  describe('/DELETE/:id user', () => {\n    it('it should not DELETE a user given the wrong id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'sommyyy',\n        password: '123',\n        email: 'somtoy@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '669761498',\n        userImage: ''\n      });\n\n      request\n        .delete('/api/v1/users/15')\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('User not found');\n          done();\n        });\n    });\n\n    it('it should DELETE a user given the id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'somto',\n        lastname: 'Ikwuoma',\n        username: 'ssommy',\n        password: '123',\n        email: 'ssomto@gmail.com',\n        gender: 'male',\n        street: 'ljan terrasse 346',\n        city: 'ikotun',\n        state: 'lagos',\n        country: 'Nigeria',\n        dob: new Date('2015-11-04'),\n        phone: '466976498',\n        userImage: 'usersUploads/testFile.png'\n      })\n        .then((user) => {\n          const filename = 'testFile.png';\n          const src = path.join('./', filename);\n          const destDir = path.join('./', 'usersUploads');\n\n          // copy image file to businessesUploads\n          fs.access(destDir, (err) => {\n            if (err) { fs.mkdirSync(destDir); }\n\n            copyFile(src, path.join(destDir, filename));\n          });\n\n          request\n            .delete(`/api/v1/users/${user.dataValues.id}`)\n            .end((err, res) => {\n              res.should.have.status(204);\n              res.body.should.be.a('object');\n              done();\n            });\n        });\n    });\n  });\n});\n"]}