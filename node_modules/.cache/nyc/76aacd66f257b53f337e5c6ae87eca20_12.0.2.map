{"version":3,"sources":["index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate"],"mappings":";;;;;;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;;AAEA,IAAMG,WAAWF,KAAKE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASR,QAAWS,SAAX,6BAA8CJ,GAA9C,CAAf;AACA,IAAMK,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIH,OAAOI,gBAAX,EAA6B;AAC3BD,cAAY,IAAIT,SAAJ,CAAcI,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,cAAY,IAAIT,SAAJ,CAAcM,OAAOK,QAArB,EAA+BL,OAAOM,QAAtC,EAAgDN,OAAOO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,GACGiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEU;AAAA,SACLC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADlE;AAAA,CAFV,EAIGC,OAJH,CAIW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQX,UAAUY,MAAV,CAAiBtB,KAAKuB,IAAL,CAAUf,SAAV,EAAqBS,IAArB,CAAjB,CAAd;AACAR,KAAGY,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CAPH;;AASAI,OAAOC,IAAP,CAAYjB,EAAZ,EAAgBW,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAIlB,GAAGkB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BnB,OAAGkB,SAAH,EAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGR,SAAH,GAAeA,SAAf;;kBAEeQ,E","file":"index.js","sourceRoot":"/home/somto/Andela/We-Connect/server/server/models","sourcesContent":["\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(`${__dirname}/../config/config.json`)[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file =>\n    (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n"]}